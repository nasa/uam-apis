openapi: 3.0.0
info:
  description: >-
    NASA Data Collection interface for uploading unstructured data
  version: "1.0.1"
  title: ATI-Data-Upload
  termsOfService: http://uam.arc.nasa.gov/terms/
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    email: shivanjli.sharma@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: 'https://ti.arc.nasa.gov/opensource/nosa/'

servers:
  - url: 'https://uss.defined.url/'

tags:
- name: uploading
  description: Endpoints for uploading data files

paths:
  /upload-intent:
    summary: Generate upload URL
    post:
      summary: Upload an array of FileMetadata models
      tags:
        - uploading
      responses:
        '200':
          $ref: '#/components/responses/r200'
        '400':
          $ref: '#/components/responses/r400'
        '401':
          $ref: '#/components/responses/r400'
        '403':
          $ref: '#/components/responses/r403'
        '409':
          $ref: '#/components/responses/r409'
        '429':
          $ref: '#/components/responses/r429'
        '500':
          $ref: '#/components/responses/r500'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FileMetadata'
        description: Upload an array of FileMetadata
        required: true

components:
  schemas:
    FileMetadata:
        description: >-
          Defines context auxiliary data for a file upload.
        required:
          - document_id
          - file_name
          - flight_type
          - data_source
          - event_id
          - checksum_code
          - flight_test_date
          - submitter_email
        properties:
          document_id:
            description: >-
              A UUID as a unique identifier to the postflight data file. Provided by the person performing for the upload (i.e., the "uploader").
            type: string
            format: uuid
          file_name:
            description: >-
              Full path of file being uploaded. File extension highly recommended. Maximum length determined by longest path and filename acceptable to OSX and Linux and Windows.
            type: string
            maxLength: 1023
          box_location:
            description: >-
              Box location URL.
            type: string
            maxLength: 1023
          description:
            description: >-
              Additional description about the file upload.
            type: string
            maxLength: 1000
          flight_type:
            description: Type of flight test.
            type: string
            enum:
              - FLIGHT_SIMULATION
              - LIVE_FLIGHT
          data_source:
            description: Source of the file being uploaded. Only one will apply. If this is a new data_source type, please contact the DM team as soon as possible.
            type: string
            enum:
              - AUDIO
              - DGPS
              - FIAPA
              - FLIGHT_REPORTS
              - IMU
              - MOF_COMM
              - RADAR_PRIMARY
              - SBSM_ADSB
              - TEST_CARDS
              - VEHICLE_TELEMETRY
              - VIDEO
              - WEATHER_SODAR
              - WEATHER_SURFACE_STATION
          industry_partner_name:
            description: Name of the industry partner associated with the data, if applicable (e.g., DGPS, IMU, RADAR_PRIMARY will likely have an associated partner). Some uploads will not be associated with a particular industry partner (e.g., weather)
            type: string
          scenario_ids:
            description: The scenarios associated with the file upload. Multiple scenarios may be possible, though in most cases only one applies.
            type: array
            items:
              type: string
              enum:
                - SCENARIO_1
                - SCENARIO_2
                - SCENARIO_3A
                - SCENARIO_3B
                - SCENARIO_3C
          event_id:
            description: The event associated with the file upload. Following the [campaign]-[phase]-[event]-[test*] naming convention (* if necessary). Only one will apply.
            type: string
            enum:
              - X3
              - X4
              - VIRTUAL_DRY_RUN
              - BUILDUP_RUN_1
              - BUILDUP_RUN_2
              - BUILDUP_RUN_3
              - DT
              - NC1-DT1-FAM1
              - NC1-DT1-BuildupRun1
              - NC1-DT1-BuildupRun2-Preconnectivity1
              - NC1-DT1-BuildupRun2-Preconnectivity2
              - NC1-DT1-BuildupRun2 
              - NC1-DT1-BuildupRun3
          checksum_code:
            description: >-
              Checksum algorithm generated code.
            type: string
            maxLength: 32
            minLength: 32
            pattern: "^[a-f0-9A-F]+$"
          checksum_algorithm:
            description: Checksum algorithm name. Only MD5 supported at this time.
            type: string
            enum:
              - MD5
          flight_test_date:
            description: Date of the flight test to which the file pertains (UTC Timestamp)
            type: string
            minLength: 20
            format: date-time
          submitted_by:
            description: User name who submitted the data from its origin.
            type: string
            maxLength: 1000
          submitter_email:
            description: Submitter email address.
            type: string
            maxLength: 254
            format: ".+@.+"
          custom_fields:
            description: An optional field for capturing metadata specific to a data source. For example, weather data files require the specification of station name and point location. This array captures the field names and values
            type: array
            minItems: 1
            items:
              type: object
              required:
                - field_name
                - field_value
              properties:
                field_name:
                  type: string
                  minLength: 1
                  maxLength: 1000
                field_value:
                  type: string
                  minLength: 0
                  maxLength: 1000
    UploadIntentResponse:
      required:
        - http_status_code
        - message
      description: |-
        If successful returns URL to use for uploading your file, else
        returns an error code.
      type: object
      properties:
        upload_url:
          description: URL to use for uploading your file
          type: string
          maxLength: 2000
          example: 'https://url'
        message:
          description: |-
              If successful returns upload details, else returns information
              corresponding to the http_status_code.
          type: string
          maxLength: 2000
        http_status_code:
          type: integer
          minimum: 100
          exclusiveMinimum: false
          maximum: 599
          exclusiveMaximum: false


  responses:

    'r200':
      description: success
      content:
        application/json:
          schema:
            $ref:
              '#/components/schemas/UploadIntentResponse'

    'r400':
      description: Bad request. Typically validation error. Fix your request and retry.
      content:
        application/json:
          schema:
            $ref:
              '#/components/schemas/UploadIntentResponse'

    'r401':
      description: Invalid or missing access_token provided.
      content:
        application/json:
          schema:
            $ref:
              '#/components/schemas/UploadIntentResponse'

    'r403':
      description: >-
        Forbidden. Do not retry with same access token. Reason not provided,
        but do you have the right scopes? Does uss_name match the sub claim?
      content:
        application/json:
          schema:
            $ref:
              '#/components/schemas/UploadIntentResponse'

    'r409':
      description: Conflict for a PUT that is unsuccessful due to a 3rd-party modification
      content:
        application/json:
          schema:
            $ref:
              '#/components/schemas/UploadIntentResponse'

    'r429':
      description: Too many recent requests from you. Wait to make further queries.
      content:
        application/json:
          schema:
            $ref:
              '#/components/schemas/UploadIntentResponse'

    'r500':
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref:
              '#/components/schemas/UploadIntentResponse'

x-amazon-apigateway-request-validator: all
x-amazon-apigateway-request-validators:
  validate_body_and_parameters:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-gateway-responses:
  DEFAULT_4XX:
    responseTemplates:
      application/json: "{\n    \"message\": \n    \"requestId: $context.requestId\
        \ , error: $context.error.responseType $context.error.messageString\"\n}"
  EXPIRED_TOKEN:
    statusCode: 403
    responseTemplates:
      application/json: "{\n    \"message\": \n    \"requestId: $context.requestId\
        \ , error: $context.error.responseType $context.error.messageString\"\n}"
  QUOTA_EXCEEDED:
    statusCode: 429
    responseTemplates:
      application/json: "{\n    \"message\": \n    \"requestId: $context.requestId,\
        \  error: $context.error.responseType $context.error.messageString\"\n}"
  DEFAULT_5XX:
    responseTemplates:
      application/json: "{\n    \"message\": \n    \"requestId: $context.requestId,\
        \  error: $context.error.responseType $context.error.messageString\"\n}"
  BAD_REQUEST_BODY:
    statusCode: 400
    responseTemplates:
      application/json: "{\n    \"message\": \n    \"requestId: $context.requestId,\
        \ error: $context.error.validationErrorString\"\n}"
  UNAUTHORIZED:
    statusCode: 401
    responseTemplates:
      application/json: "{\n    \"message\": \n    \"requestId: $context.requestId,\
        \ error: $context.error.responseType \"\n}"
  ACCESS_DENIED:
    statusCode: 403
    responseTemplates:
      application/json: "{\n    \"message\": \n    \"requestId: $context.requestId,\
        \ error: $context.error.responseType $context.error.messageString\"\n}"
