openapi: 3.0.0
servers:
  - description: Resources Planning Service for Demand Capacity Balancing (DCB)
  
    url: 'https://rps-dcb.arc.nasa.gov'
info:
  description: |- 
    Resources Planning Service for Demand Capacity Balancing (RPS-DCB) Interface. RPS-DCB manages demand for a resource to ensure that it does not exceed the capacity of the resource. Also, RPS-DCB is used for determining availability of resources for planning and scheduling of resources within 4-D trajectory of an operational intent communicated to PSU and for submission to DSS.
    - Based on astm-uam-psu-dcb-0.0.0.yaml as of Feb 13, 2025
    - Provider of Services for Urban Air Mobility (PSU) API, see https://github.com/nasa/uam-apis/blob/master/openapi/psu/psu_api.yml
    - Discovery & Synchronization Service (DSS) API, see https://github.com/nasa/uam-apis/blob/master/openapi/psu/dss_api.yml
    - Resource Information Service (RIS) model in https://github.com/nasa/uam-apis/blob/master/openapi/ri/ri_api.yml
      - Based on astm-uam-psu-ri-0.0.0.yaml as of Feb 13, 2025
  version: 3.1.0
  title: AMP TCL-1 RPS-DCB API
  contact:
    name: NASA

# Assumption: Resource Planning Service has input certain configurations for resources from CIS.
# Based on Sequence Diagrams documented in https://atmconfluence.arc.nasa.gov/display/AMP/TCL1+Sequence+Diagrams

security:
  - fimsAzAuth: 
    - utm.strategic_coordination

tags:
  - name: Resources Planning
    description: |-
      Endpoints exposed by Resources Planning Services (RPS) for reporting about resources, its availability, etc.
  - name: Resource references
    description: Endpoints exposed to Resource Information Service (RIS) for details regarding resource references.
  - name: Resource definition
    description: Endpoints exposed to Resource Information Service (RIS) for details regarding the physical definition and default capacity of a resource.  
  - name: Resource capacities
    description: Endpoints exposed to Resource Information Service (RIS) for details regarding future resource capacities.
  - name: Resource status
    description: Endpoints exposed to Resource Information Service (RIS) for details regarding the current status and capacity of a resource.
  - name: Imbalance checks
    description: |-
      Endpoints exposed by PSU DCBs to allow for on-demand imbalance checks. 
  - name: Operations
    description: |-
      Endpoints exposed by Resources Planning Services (RPS) for interaction about operations at resources.
  - name: p2p_uam
    description: |-
      Endpoints exposed by PSUs (Provider of UAM Services) for peer-peer communication.

paths:
  /rps/dcb/v1/resources_availability/query:
    post:
      tags:
        - Resources Planning
      security:
        - fimsAzAuth:
            - utm.strategic_coordination
      summary: >-
        Get availability of resources for scheduling an operation. Availability is mainly determined based on time when an aircraft will arrive, a.k.a. Estimated Time of Arrival (ETA), at resources.
      description: |- 
        Factors like aircraft speed, altitude, etc. may be needed to determine resource availability. Return earliest available time when all resources, part of 4-D trajectory of operational intent, are available. 
      requestBody:
        description: >-
          With information about resources planned for 4-D trajectory of operation plan. 4-D trajectory is based on PSU-to-PSU API - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesPlanningRequest'
        required: true
      responses:
        '200':
          description: >- 
            OK. Resource has availability information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesAvailabilityResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Bad request. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, etc.) Examples:
            - No trajectory provided.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Unauthorized. Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Forbidden. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Not found. URL is not recognized or endpoint is invalid. Also, if the RPS-DCB cannot find any managed resource within given trajectory.
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Method not allowed. The request method is known by the server but is not supported by the target resources. Examples: 
            - Resource without a constraint stating criteria for within a certain time interval cannot respond to this query.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            RPS-DCB server or processing error.

  /rps/dcb/v1/resources_available_volumes/query:
    post:
      tags:
        - Resources Planning
      security:
        - fimsAzAuth:
            - utm.strategic_coordination
      summary: >-
        Get volumes for resources, with availability checks, needed by an operation intent for submission to a PSU network. 
      description: |-
        Includes availability confirmation for all resources managed by RPS-DCB. Availability is mainly determined based on time when an aircraft will arrive, a.k.a. Estimated Time of Arrival (ETA), at resources. Factors like aircraft speed, altitude, etc. may be needed to determine resource availability. 4-D volumes, a.k.a. extents, for each resource is needed for operational intent submission to a PSU network.
      requestBody:
        description: |-
          With information about resources planned within 4-D trajectory of an operation plan. Based on PSU-to-PSU API
          - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesPlanningRequest'
        required: true
      responses:
        '200':
          description: >- 
            OK. Resource has information about its volume and availability.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesAvailableVolumesResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Bad request. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, etc.) Examples:
            - No trajectory provided.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Unauthorized. Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Forbidden. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Not found. URL is not recognized or endpoint is invalid. Also, if the RPS-DCB cannot find any managed resource within given trajectory.
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Method not allowed. The request method is known by the server but is not supported by the target resources. Examples: 
            - Resource without a constraint stating criteria for within a certain time interval cannot respond to this query.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            RPS-DCB server or processing error.

  /rps/dcb/v1/resources_ovns/query:
    post:
      tags:
        - Resources Planning
      security:
        - fimsAzAuth:
            - utm.strategic_coordination
      summary: >-
        Get Opaque Version Numbers (OVN) assigned by Discovery Synchronization Service (DSS) for other operational intents planned for resource.
      description: |- 
        Return OVNs without checking for resource availability against on operational intent planned.
        Note: DSS 'ovn' is returned ONLY to the PSU that created the operational intent but NEVER to other PSU instances.
        - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/OperationalIntentReference
      requestBody:
        description: |-
          With information about start and end timings of operation and resource planned within 4-D trajectory of operation plan. Based on PSU-to-PSU API 
          - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesPlanningRequest'
        required: true
      responses:
        '200':
          description: >- 
            OK. Return Opaque Version Numbers (OVN) assigned by Discovery Synchronization Service (DSS) for other operational intents submitted to DSS using resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesEntityOVNsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Bad request. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, etc.) Examples:
            - No trajectory provided.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Unauthorized. Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Forbidden. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Not found. URL is not recognized or endpoint is invalid. Also, if the RPS-DCB cannot find any managed resource within given trajectory.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            RPS-DCB server or processing error.


  /rps/dcb/v1/resources_volumes/query:
    post:
      tags:
        - Resources Planning
      security:
        - fimsAzAuth:
            - utm.strategic_coordination
      summary: >-
        Get all 4-D resource volumes, with start and end timings, for each 4-D trajectory point planned at resource within an operation without availability checks.
      description: |- 
        Return array of 4-D, with start and end timings, resource volumes without checking for resource availability against 4-D trajectory point planned at resource.
      requestBody:
        description: |-
          With information about start and end timings of operation and resource planned within 4-D trajectory of operation plan. Based on PSU-to-PSU API 
          - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesPlanningRequest'
        required: true
      responses:
        '200':
          description: >- 
            OK. Return 4-D resource volume with start and end timings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesEntityVolumesResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Bad request. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, etc.) Examples:
            - No trajectory provided.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Unauthorized. Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Forbidden. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Not found. URL is not recognized or endpoint is invalid. Also, if the RPS-DCB cannot find any managed resource within given trajectory.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            RPS-DCB server or processing error.

  /rps/dcb/v1/operations/{resource}:
    get:
      summary: >-
        Get operations already scheduled at resource within time window.
      tags:
        - Operations
      security:
        - fimsAzAuth:
            - utm.strategic_coordination
      parameters:
        - name: resource
          in: path
          required: true
          description: |-
            Resource name that matches the 'point_designator' field in the TrajectoryPoint4D object within the operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D. 
          schema:
            type: string
          example: "DF30"
        - name: time_start
          in: query
          required: true
          description: |-
            Parameter defining the start time for the interval for querying operations scheduled at resource.
          schema:
            $ref: '#/components/schemas/TimeParam'
        - name: time_end
          in: query
          required: false
          description: |-
            Parameter defining the end time for the interval for querying operations at resource.
            - If no end time provided, assume end time is 2 hours later.
          schema:
            $ref: '#/components/schemas/TimeParam'
      responses:
        '200':
          description: >- 
            OK. Information about operations scheduled at resource is available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceOperations'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Bad request. One or more parameters were missing or invalid. Examples:
            - No resources provided.
            - If end time is earlier than start time.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Unauthorized. Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Forbidden. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Not found. URL is not recognized or endpoint is invalid. Also, if the RPS-DCB cannot find any managed resource within given trajectory.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            RPS-DCB server or processing error.

  #
  # PSU-DCB paths.
  # Based on astm-uam-psu-ris-0.0.0.yaml as of Feb 13, 2025.
  # Based on astm-uam-psu-dss-0.0.0.yaml as of Feb 13, 2025.
  # Based on astm-uam-psu-dcb-0.0.0.yaml as of Feb 13, 2025.
  #
  /dcb/v1/imbalance/query:
  # Different from astm-uam-psu-dcb-0.0.0.yaml without start and end time
  # input parameters in ResourcesBasedImbalanceRequest schema
    post:
      description: >-
        Demand-capacity imbalance detection endpoint that requires users to submit a 
        specification of area of interest defined as volume or a list of resources 
        to detect whether the resources included in this query are under, at, or over available capacity. 
        This endpoint returns resource and operation details sufficient for submitting an operation
        to the DSS, but does not include operational intent extent and resource crossing details. It will
        be left to the caller to build this information before submitting to the DSS and other OIMs. 
      tags:
        - Imbalance checks
      summary: >-
        Demand-capacity imbalance detection endpoint that requires users to submit a 
        specification of area of interest defined as volume or a list of resources 
        to detect whether the resources included in this query are under, at, or over available capacity. 
        This endpoint returns resource and operation details sufficient for submitting an operation
        to the DSS, but does not include operational intent extent and resource crossing details. It will
        be left to the caller to build this information before submitting to the DSS and other OIMs. 
      operationId: queryImbalancedResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesBasedImbalanceRequest'
      responses:
        '200':
          description: >-
            Demand-capacity imbalance status for the resources included in the area of interest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesImbalanced'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            One or more parameters were missing or invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Bearer access token was not provided in Authorization header,
            token could not be decoded, or token was invalid.
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Request Content-type header was different from the required application/json.
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            The number of requests exceeded DCB processing capabilities. The client should wait and then retry sending the request.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            DCB service error.   
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            DCB service availability error triggered by unavailability of one or more required services such as DSS.
      security:
      - fimsAzAuth:
        - utm.strategic_coordination

  #
  # RI-DCB paths.
  # Based on astm-uam-psu-ris-0.0.0.yaml as of Feb 13, 2025.
  # Based on astm-uam-psu-dss-0.0.0.yaml as of Feb 13, 2025.
  # Based on astm-uam-psu-dcb-0.0.0.yaml as of Feb 13, 2025.
  #
  /dcb/v1/resource_details:
    summary: RIS shares detailed information about a resource. 
    post:
      tags:
      - Resource references
      - Resource capacities
      - Resource definition
      - Resource status
      - p2p_uam
      summary: Notify a peer PSU about resource details.
      description: Notify a peer PSU directly of changed resource details (usually as a requirement of previous interactions with the DSS).
      operationId: notifyResourceDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourceDetails'
        required: true
      responses:
        "204":
          description: New or updated full resource information received successfully.
        "400":
          description: |-
            * One or more parameters were missing or invalid.
            * The Entity could not be parsed, or contains illegal data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: |-
            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.
            * The client identified in the access token is not the manager of this Entity according to the receiving client's records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: |-
            The Entity version specified in this message is lower than
            a previously-received notification, or identical to a previously-received
            notification and the Entity is different.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - fimsAzAuth:
        - utm.strategic_coordination
        
  /dcb/v1/resource_details/{entityid}:
    summary: |-
      endpoint hosted by DCB to allow RIS to share detailed information about a resource in response to a 
      subscription that the DCB has with the DSS. 
    put:
      tags:
      - Resource references
      - Resource capacities
      - Resource definition
      - Resource status
      - p2p_uam
      summary: Notify a peer PSU of changed resource details.
      description: Notify a peer PSU directly of changed resource details (usually as a requirement of previous interactions with the DSS).
      operationId: notifyResourceDetailsChanged
      parameters:
      - name: entityid
        in: path
        description: EntityID for this resource.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/EntityID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourceDetails'
        required: true
      responses:
        "204":
          description: New or updated full resource information received successfully.
        "400":
          description: |-
            * One or more parameters were missing or invalid.
            * The Entity could not be parsed, or contains illegal data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: "Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: |-
            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.
            * The client identified in the access token is not the manager of this Entity according to the receiving client's records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: |-
            The Entity version specified in this message is lower than
            a previously-received notification, or identical to a previously-received
            notification and the Entity is different.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "429":
          description: The client issued too many requests in a short period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - fimsAzAuth:
        - utm.strategic_coordination
        
  #
  # PSU-PSU path components - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml
  # 
  /rps/dcb/psu/v1/operational_intents:
    post:
      tags:
        - p2p_uam
      security:
        - fimsAzAuth:
            - utm.strategic_coordination
      summary: Notified by a PSU of new or changed operational intent details.
      description: |- 
        Notified by PSU or other airspace subscribers directly of new or changed operational intent details (usually as a requirement of previous interactions with the DSS).
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOperationalIntentDetailsParameters'
        required: true
      responses:
        '201':
          description: Created. New or updated full operational intent information received successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            * One or more parameters were missing or invalid.
            * The Entity could not be parsed, or contains illegal data.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.
            * The client identified in the access token is not the manager of this Entity according to the receiving client's records.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            The Entity version specified in this message is lower than a previously-received notification, or identical to a previously-received notification and the Entity is different.
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The client issued too many requests in a short period of time.ß

components:
  securitySchemes:
    fimsAzAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |-
         This security scheme is applied to all operations, and the bearer token
         must be acquired from the Fims-AZ. The scope must be 'utm.strategic_coordination' and the 'aud' claim must match the base URL of the RPS-DCB server.
          
  schemas:
    # ResourcesQueryRequest:
    #   type: object
    #   description: |-
    #     Request body to get availability time windows when resource, managed by the RPS, is available for scheduling an operation. Availability determination is mainly based on time when an aircraft will arrive, a.k.a. Estimated Time of Arrival (ETA), at resource. Factors like aircraft speed, altitude, etc. may need to be considered to determine availability, 4-D volume, etc. at resource needed for operational intent submission.
    #   required:
    #     - gufi
    #     - trajectory
    #   properties:
    #     gufi:
    #       description: >-
    #         Should be Operational Intent identifier for use in a response or an ErrorResponse.
    #       $ref: '#/components/schemas/EntityID'
    #     trajectory:
    #       type: array
    #       minItems: 1
    #       maxItems: 1000
    #       description: |-
    #         The list of TrajectoryPoints for an operation that need resources.  This list must contain all significant TrajectoryPoints per the Community Based Rules (CBR). For additional insight on points to be included, see the enumeration of property types in the TrajectoryPoint4D model.
    #       items:
    #         $ref: '#/components/schemas/TrajectoryPoint4D'
    #     missing_operational_intents:
    #       description: |- 
    #         Note: DSS 'missing_operational_intents' is returned for a AirspaceConflictResponse with response code 409.
    #         - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/AirspaceConflictResponse
    #           - List of operational intent references for which current proof of knowledge was not provided.  If this field is present and contains elements, the service should query, via uss_base_url, for details of these operational intents and correct OVNs.  The OVNs should be returned to caller for re-submission to DSS.
    #       type: array
    #       items:
    #         $ref: '#/components/schemas/OperationalIntentReference'
    #       default: []
    
    ResourcesPlanningRequest:
      type: object
      description: |-
        Request body to check availability of resources, managed by the RPS, is available for scheduling an operation. Availability determination is mainly based on time when an aircraft will arrive, a.k.a. Estimated Time of Arrival (ETA), at resource. Factors like aircraft speed, altitude, etc. may need to be considered to determine availability, 4-D volume, etc. at each resource needed for an operational intent submission or updates.
      required:
        - gufi
        - trajectory
      properties:
        gufi:
          description: >-
            Should be Operational Intent identifier for use in a response or an ErrorResponse.
          $ref: '#/components/schemas/EntityID'
        trajectory:
          type: array
          minItems: 1
          maxItems: 1000
          description: |-
            The list of TrajectoryPoints for an operation that need resources.  This list must contain all significant TrajectoryPoints per the Community Based Rules (CBR). For additional insight on points to be included, see the enumeration of property types in the TrajectoryPoint4D model.
          items:
            $ref: '#/components/schemas/TrajectoryPoint4D'
        missing_operational_intents:
          description: |- 
            Note: DSS 'missing_operational_intents' is returned for a AirspaceConflictResponse with response code 409.
            - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/AirspaceConflictResponse
              - List of operational intent references for which current proof of knowledge was not provided.  If this field is present and contains elements, the service should query, via uss_base_url, for details of these operational intents and correct OVNs.  The OVNs should be returned to caller for re-submission to DSS.
          type: array
          items:
            $ref: '#/components/schemas/OperationalIntentReference'
          default: []

    ResourcesAvailabilityResponse:
      type: object
      description: |-
        Response to get availability of resources, managed by RPS-DCB, for an operation. Earliest available time is based on 4-D trajectory in operation and should be either requested time, for on-time departure, or later time, for delayed departure, when all resources will be available for an operation.
      required:
        - gufi
        - earliest_available_time
      properties:
        gufi:
          description: >-
            From original request which could be operational intent identifier.
          $ref: '#/components/schemas/EntityID'
        earliest_available_time:
          description: |-
            Earliest available time when the vehicle can be at the location of the first resource of an operation. 
          $ref: '#/components/schemas/Time'

#    ResourceAvailability:
#      type: object
#      required:
#        - resource
#        - available_time_intervals
#      description: |-
#        Availability properties for a defined resource. Should be interpreted as operations can still be scheduled at resource within start to end time intervals.
#      properties:
#        resource:
#          type: string
#          description: >-
#            Name of resource and matches the 'point_designator' field in the TrajectoryPoint4D object within the operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D.
#          example: 'DF101'
#        available_time_intervals:
#          type: array
#          description: >- 
#            Array of available time intervals for this resource.
#          items:
#            $ref: '#/components/schemas/TimeInterval'
#          default: []

    ResourcesAvailableVolumesResponse:
      type: object
      description: |-
        Response to get details for planned resources, managed by RPS-DCB, needed within an operational intent for submission to a PSU network. Includes confirmation that resources are still available.
      required:
        - gufi
        - resources_available
      properties:
        gufi:
          description: >-
            From original request which could be operational intent identifier.
          $ref: '#/components/schemas/EntityID'
        resources_available:
          type: boolean
          description: >-
            Confirmation that resources are still available.
          default: True
        resources_volume:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAvailabilityVolume'
          default: []
        ovn_array:
          type: array
          description: |-
            DSS Opaque Version Numbers (OVN) of any other operational intents:
            - Already scheduled at resource.
            - Not using resource but was from 'missing_operational_intents' returned by DSS due to a AirspaceConflictResponse with response code 409.
              - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/AirspaceConflictResponse
          items:
            $ref: '#/components/schemas/EntityOVN'
          default: []

    ResourceAvailabilityVolume:
      description: |-
        Information for a resource needed in operational intent 4-D trajectory for planning and submission. Includes indication whether resource is still available, 4-D volume or extent for resource and array of DSS Opaque Version Numbers (OVN).
        - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml
      type: object
      required:
        - resource
        - resource_available
      properties:
        resource:
          type: string
          description: >-
            Name of resource matches the 'point_designator' field in the TrajectoryPoint4D object within the operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D.
        resource_available:
          type: boolean
          description: >-
            Confirmation that this resource is still available.
          default: True
        resource_volume:
          description: >- 
            3-D volume with start and end timings to schedule the resource
          nullable: true
          $ref: '#/components/schemas/Volume4D'
    
    ResourcesEntityOVNsResponse:
      description: |-
        Response to query to get Opaque Version Numbers (OVN) assigned by Discovery Synchronization Service (DSS) for other operational intents planned at resource. Note: DSS 'ovn' is returned ONLY to the PSU that created the operational intent but NEVER to other PSU instances.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/OperationalIntentReference
      required:
        - gufi
        - resources
      properties:
        gufi:
          description: >-
            From original request which should be operational intent identifier.
          $ref: '#/components/schemas/EntityID'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceName'
          default: []
        ovn_array:
          type: array
          description: |-
            DSS Opaque Version Numbers (OVN) of any other operational intents:
            - Already scheduled at resources.
            - Not using resource but was from 'missing_operational_intents' returned by DSS due to a AirspaceConflictResponse with response code 409.
              - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/AirspaceConflictResponse
          items:
            $ref: '#/components/schemas/EntityOVN'
          default: []

    ResourcesEntityVolumesResponse:
      description: |-
        Response to query to get 4-D resource volume, managed by the RPS, with start and end timings, for a planned 4-D trajectory point in operation intent using resource.
      required:
        - gufi
        - resources_volumes
      properties:
        gufi:
          description: >-
            From original request which should be operational intent identifier.
          $ref: '#/components/schemas/EntityID'
        resources_volumes:
          description: >- 
            4-D volume for resource, with start and end timings, to schedule the resource
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/ResourceVolume'
          default: []

    ResourceName:
      title: ResourceName
      description: |-
        Name of resource that matches 'point_designator' field in TrajectoryPoint4D object within operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D.
      type: string
      minLength: 1
      maxLength: 128
      example: DF100
      
    ResourceOperations:
      type: object
      description: |-
        Information about operational intents scheduled at resources.
      required:
        - resource
        - resource_operations
      properties:
        resource:
          type: string
          description: >-
            Name of resource matches the 'point_designator' field in the TrajectoryPoint4D object within the operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D.
          example: 'DF101'
        resource_operations:
          type: array
          description: >- 
            Array of operations scheduled at resource.
          items:
            $ref: '#/components/schemas/OperationalIntentReference'
          default: []

    ResourceVolume:
      type: object
      description: |-
        Response to get volume for planned resource, managed by the RPS, needed within an operational intent for submission.
      required:
        - resource
        - resource_volume
      properties:
        resource:
          type: string
          description: >-
            Name of resource matches the 'point_designator' field in the TrajectoryPoint4D object within the operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/blob/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D.
        resource_volume:
          description: >- 
            3-D volume with start and end timings to schedule the resource
          nullable: true
          $ref: '#/components/schemas/Volume4D'

    TimeInterval:
      type: object
      description: >-
        Start and end time interval. Time interval is half-open with the lower bound, start time, included and upper bound, end time, excluded. For example, this will be interpreted as [12:00, 12:12) so next interval can be [12:12, 12:24).
      required:
        - time_start
        - time_end
      properties:
        time_start:
          description: >- 
            Beginning time of this availability time interval. Must be before time_end.
          $ref: '#/components/schemas/Time'
        time_end:
          description: >- 
            End time of this availability time interval. Must be after time_start.
          $ref: '#/components/schemas/Time'

    ErrorResponse:
      type: object
      required:
        - "msg"
      properties:
        status_code:
          description: >-
            the status code of the response
          type: integer
          format: int32
        msg:
          description: >-
            message should have reason for response
          type: string
        entity_id:
          type: string
          format: uuid
        request_id:
          type: string
          
    #
    # RI-DCB and DSS-DCB schema components.
    # Based on astm-uam-psu-ris-0.0.0.yaml as of Feb 13, 2025.
    # Based on astm-uam-psu-dss-0.0.0.yaml as of Feb 13, 2025.
    # Based on astm-uam-psu-dcb-0.0.0.yaml as of Feb 13, 2025.
    #
    ResourcesBasedImbalanceRequest:
    # Different from AreaOrResourceBasedImbalanceRequest schema in astm-uam-psu-dcb-0.0.0.yaml
    # This is without time_start and time_end and not based on area_of_interest 3-D volume
      type: object
      required:
        - resource_ids
      properties:
        resource_ids:
          description: |- 
            List of resources for which to query. 
            - Identifiers should match resource identifiers returned from Adaptation Synchronization Data Service (ASDS).
          type: array
          items:
            $ref: '#/components/schemas/EntityID'
#        time_start:
#          description: Start time for resource availability query.  If start time is not specified, 
#            it will default to the time the request is processed.
          # anyOf:
          # - $ref: '#/components/schemas/Time'
#          $ref: '#/components/schemas/Time'
#        time_end:
#          description: End time of resource availability query. If end time is not specified, the 
#            value will be chosen automatically by the DSS. The end time may not be in the past.
          # anyOf:
          # - $ref: '#/components/schemas/Time'
#          $ref: '#/components/schemas/Time'
            
    ContributingOperation:
      type: object
      description: Id and OVN of an operation contributing to demand or imbalance. 
      required:
        - operational_intent_id
        - operation_ovn
      properties:
        operation_ovn:
          $ref: '#/components/schemas/EntityOVN'
          description: OVN of the operation
        operational_intent_id:
          $ref: '#/components/schemas/EntityID'
          description: Operational intent ID of the operation
        resource_usage:
          description: |-
            Duration of time for a volume based resource, or crossing Time
            for a waypoint based resource. 
          $ref: '#/components/schemas/ResourceOccupationDuration'
          # anyOf:
          #  - $ref: '#/components/schemas/ResourceCrossing"
          #  - $ref: '#/components/schemas/ResourceOccupationDuration"  

    ResourceCrossing:
      required:
       - crossing_time
      type: object
      properties:
        crossing_time:
          $ref: '#/components/schemas/Time'

    DemandCapacityImbalanceInterval:
      type: object
      description: >-
        Returns a time range, imbalance status for the range, and all operation OVNs contributing to 
        demand within that time range.
      required:
        - time_start
        - time_end
        - imbalance_magnitude
        - imbalance_status
        - operations
      properties:
        time_start:
          description: Beginning time of the time bin for computing this demand capacity imbalance status. If the capacity requirements
            are based on rate or an instantaneous limit, this value will be the time when that capacity rule began. Must be before time_end.
          # anyOf:
          # - $ref: '#/components/schemas/Time'
          $ref: '#/components/schemas/Time'
        time_end:
          description: End time of the time bin for computing this demand capacity imbalance status. Can be empty if the capacity rule
            in place is an instantaneous or rate limit.  If included, must be after time_start.
          # anyOf:
          # - $ref: '#/components/schemas/Time'
          $ref: '#/components/schemas/Time'     
        imbalance_magnitude:
          type: number
          format: double
          description: The magnitude of demand capacity imbalance. Negative values indicate available capacity, zero indicates at capacity, 
            and positive values indicate over capacity
        imbalance_status:
          type: string
          enum:
            - OVER_CAPACITY
            - AT_CAPACITY
            - UNDER_CAPACITY
          description: >-
            string indicating whether corresponding resource is over, at or under capacity
        operations:
          type: array
          items:
            $ref: '#/components/schemas/ContributingOperation'
          minItems: 0
          description: >-
            IDs and OVNs for all operations contributing to the reported demand at this resource at this time bin

    ResourcesImbalanced:
      type: object
      required:
        - resource_imbalances
      properties:
        resources_imbalanced:
          type: array
          items:
            $ref: '#/components/schemas/ResourceDemandCapacityImbalances'
          minItems: 0
          default: []
            
    ResourceDemandCapacityImbalances:
      type: object
      description: >-
        a set of properties describing a resource imbalance status that includes a resource reference from the adaptation data, 
        the start and end time of the time bin used for demand-capacity imbalance computation, the magnitude of the imbalance, 
        the imbalance status, and a potentially empty set of OVNs for all operations contributing to the reported demand at this resource at this time bin
         - Identifiers should match resource identifiers returned from Adaptation Synchronization Data Service (ASDS).
      required:
        - resource_id
        - resource_imbalances
      properties:
        resource_id:
            $ref: '#/components/schemas/EntityID'
        resource_ovn:
          $ref: '#/components/schemas/EntityOVN'
          description: >-
            OVN proving knowledge of the latest status & capacity info for the resource. 
        resource_imbalances:
          type: array
          items:
            $ref: '#/components/schemas/DemandCapacityImbalanceInterval'
          description: List of imbalance time ranges and determinations for the resource. 

    CapacityLimitType:
      required:
        - capacity_type
      type: object
      properties:
        capacity_type:
          type: string
          description: |
            The type of capacity limitation which is to be met for the resource. 
            Types of constraint at waypoint are:
            - FLOW_RATE_CONSTANT
              Constant time rate of separation.
            - FLOW_RATE_FIXED_BIN
              Constraint values for number of operations within a fixed time bin with duration in seconds. 
              - Fixed time bin should start at top-of-the-hour and evenly divide up an hour. For more details, see description for unit = seconds in CapacityPropertyType.
            - FLOW_RATE_ROLLING_BIN
              Constraint values for number of operations within a rolling time bin starting at end of previous time bin. Duration of time bin is in seconds in CapacityPropertyType. 
              - Rolling time bin does not necessarily start at top-of-the-hour.
            - INSTANTANEOUS
              The maximum number of operations that are permitted to occupy the resource at any time.
          externalDocs:
            url: TBD
          enum: 
          - FLOW_RATE_CONSTANT
          - FLOW_RATE_FIXED_BIN
          - FLOW_RATE_ROLLING_BIN
          - INSTANTANEOUS

    CapacityPropertyType:
      required:
        - capacity_property
        - capacity_value
      type: object
      properties:
        capacity_property:
          type: string
          description: |
            Property of the capacity check which must be met.
            - RATE describes the number of crossings (or events) allowed per time interval DURATION (seconds).
              Resources using RATE property must also specify a DURATION property. 
            - DURATION describes the length of a capacity bin or the interval duration (seconds). 
            - LIMIT describes the max aircraft allowed in either a time bin or instantaneously. If
              describing a time bin, the LIMIT and DURATION properties must both be provided.  
          externalDocs:
            url: TBD
          enum: 
          - DURATION
          - LIMIT
          - RATE
        capacity_value:
          type: number
          description: |-
            The number of flights allowed without exceeding the capacity limit.  This
            number represents the maximum capacity for the limit type. 
          minimum: 0

    ResourceCapacity:
      required:
      - capacity_limit_type
      - capacity_property_array
      description: |-
        Describes the properties of the capacity requirements defined for the resource.
        For example, to specify only 2 operations within 12-minutes time bin
        - capacity_limit_type = FLOW_RATE_FIXED_BIN with capacity properties:
          - capacity_property = DURATION with capacity_value = 720
          - capacity_property = LIMIT with capacity_value = 2
      properties:
        capacity_limit_type:
          $ref: '#/components/schemas/CapacityLimitType'
        capacity_property_array:
          items:
            $ref: '#/components/schemas/CapacityPropertyType'
          minItems: 1
          maxItems: 2
          type: array
      
    ActiveResourceCapacity:
      required: 
        - resource_capacity
      description: |-
        The current resource capacity requirement in place. This may be a default in Resource Definition or a temporary capacity requirement.
        - If capacity end time is provided, either active resource capacity is default capacity in Resource Definition or next Temporary Resource Capacity in Future Capacities.
      properties:
        resource_capacity:
          $ref: '#/components/schemas/ResourceCapacity'
        capacity_end_time:
          description: The time at which the updated resource capacity ends, if known. 
            If not provided, the current capacity continues indefinitely.
          $ref: '#/components/schemas/Time'

    ResourceDefinition:
      required:
      - default_capacity
      type: object
      properties:
        physical_definition:
          $ref: '#/components/schemas/ResourcePhysicalDefinition'
        default_capacity:
          $ref: '#/components/schemas/ResourceCapacity'
        performance_bound:
          $ref: '#/components/schemas/PerformanceBound'
      description: Response to peer request for the resource definition of the resource with the given ID.

    ResourceDetails:
      required:
        - resource_reference
        - definition
        - current_resource_status
        - future_capacities
      properties:
        resource_reference:
          description: |-
            Full information about the resource reference that has changed. If this field is omitted, the resource was deleted.  The `ovn` field in the nested `reference` must be populated.
          $ref: '#/components/schemas/ResourceReference'
        definition:
          $ref: '#/components/schemas/ResourceDefinition'
        current_resource_status:
          $ref: '#/components/schemas/CurrentResourceStatus'
        future_capacities:
          description: |-
            List of upcoming capacity changes for the resource.  Should be ordered by time and progress 
            from earliest to latest.
          type: array
          items: 
            $ref: '#/components/schemas/TemporaryResourceCapacity'
          default: []

    CurrentResourceStatus:
      required:
        - status
        - active_capacity
      description: |-
        Returns the current resource status and active capacity rule in place.
        - status is independent of active capacity. 
      properties:
        status: 
          $ref: '#/components/schemas/ResourceStatus'
        active_capacity:
          $ref: '#/components/schemas/ActiveResourceCapacity'
        performance_bound:
          $ref: '#/components/schemas/PerformanceBound'

    ResourceStatus:
      required: 
        - status
      properties:
        status: 
          type: string
          description: The current status of the resource. 
          enum: 
          - ACTIVE
          - INACTIVE

    TemporaryResourceCapacity:
      required: 
        - id
        - resource_capacity
        - capacity_start_time
      description: |-
        A temporary resource capacity which overrides the default Resource Capacity.
        - The capacity start time should be later than current time.
        - The id should be unique and needed to allow for future updates (for example, adding an end time) to an existing temporary capacity change.
      properties:
        id:
          description: |- 
            A unique identifier for this temporary change to the default resource capacity.  Included to allow for future updates (ex. adding an end time) to an existing temporary capacity change. 
          $ref: '#/components/schemas/EntityID'
        resource_capacity:
          $ref: '#/components/schemas/ResourceCapacity'
        capacity_start_time:
          description: The time at which the updated resource capacity begins. 
          $ref: '#/components/schemas/Time'
        capacity_end_time:
          description: The time at which the updated resource capacity ends, if known. 
            If not provided, the temporary capacity continues indefinitely. 
          $ref: '#/components/schemas/Time'

    ResourceShape:
      description: The physical shape of the resource.  This is not the same as the resource extent saved in the DSS.
      properties:
        outline_circle:
          $ref: '#/components/schemas/Circle'
        outline_polygon:
          $ref: '#/components/schemas/Polygon'
        lat_lng_point:
          description: Latitude and Longitude of the point. If this is for a named resource 
            point from ASDS, it should be the same value as from ASDS.
          $ref: '#/components/schemas/LatLngPoint'

    ResourcePhysicalDefinition:
      required:
        - name
        - shape
        - type
      description: |-
        If this is for a named resource from ASDS, it should be the same value as from ASDS.
      properties:
        name:
            description: Name of the resource.
            example: DF100
            $ref: '#/components/schemas/TextShortType'
        shape:
          $ref: '#/components/schemas/ResourceShape'
        altitude_lower:
          description: Lower altitude limit of the resource, if any.
            If this is for a named resource from ASDS, it should be the same value as from ASDS.
          $ref: '#/components/schemas/Altitude'
        altitude_upper:
          description: Upper altitude limit of the resource, if any.
            If this is for a named resource from ASDS, it should be the same value as from ASDS.
          $ref: '#/components/schemas/Altitude'
        type:
          $ref: '#/components/schemas/ResourceType'

    ResourceType:
      required: 
        - resource_type
      properties:
        resource_type: 
          type: string
          description: The type of resource.  
          enum: 
          - WAYPOINT
          - VOLUME

    PerformanceBound:
      description: Performance bounds for a resource indicate lateral, vertical, and time 
        bounds which must be met for an operational intent to remain conforming. 
      required:
        - maximum_altitude_deviation
        - maximum_lateral_deviation
        - maximum_time_deviation 
      properties: 
        maximum_time_deviation:
          description: The time buffer allowed from the expecting crossing or occupation time that is allowed in Seconds. 
          type: number
        maximum_altitude_deviation:
          description: The maximum allowed altitude deviation in feet. 
          type: number
        maximum_lateral_deviation:
          description: The maximum allowed lateral deviation in feet. 
          type: number
        min_altitude:
          description: The minimum allowed altitude for usage of this resource.
          $ref: '#/components/schemas/Altitude'
        max_altitude:
          description: The maximum allowed altitude for usage of this resource.
          $ref: '#/components/schemas/Altitude'
        min_speed:
          description: The minimum allowed speed for usage of this resource.
          $ref: '#/components/schemas/Velocity'
        max_speed:
          description: The maximum allowed speed for usage of this resource.
          $ref: '#/components/schemas/Velocity'
        radius:
          description: The maximum allowed radius for usage of this resource.
          $ref: '#/components/schemas/Radius'
        trajectory_interval_required:
          description: Specifies how frequently trajectory points are required to be
            provided when describing use of this resource, in seconds. 
          type: number
          format: integer 
        performance_bound_start_time:
          description: The time at which the performance bound start, if known. 
          $ref: '#/components/schemas/Time'
        performance_bound_end_time:
          description: The time at which the performance bound ends, if known. 
            If not provided, the performance bound continues indefinitely. 
          $ref: '#/components/schemas/Time'

    ResourceOccupationDuration:
      required:
       - entry_time
       - exit_time
      type: object
      properties:
        entry_time:
          $ref: '#/components/schemas/Time'
        exit_time:
          $ref: '#/components/schemas/Time'
      
    ResourceUssBaseURL:
      description: The base URL of a USS implementation that implements the parts of the USS-USS API necessary for providing the details of this constraint.
      $ref: '#/components/schemas/UssBaseURL'
    
    ResourceReference:
      required:
      - id
      - manager
      - time_start
      - ris_availability
      - ris_base_url
      - version
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EntityID'
        manager:
          type: string
          description: Created by the DSS based on creating client's ID (via access token).  Used internal to the DSS for restricting mutation and deletion operations to manager.  Used by USS to reject resource update notifications originating from a USS that does not manage the resource.
          example: uss1
        ris_availability:
          $ref: '#/components/schemas/UssAvailabilityState'
        version:
          type: integer
          description: "Numeric version of this constraint which increments upon each change in the resource, regardless of whether any field of the resource reference changes.  A USS with the details of this resource when it was at a particular version does not need to retrieve the details again until the version changes."
          format: int32
          example: 1
        ovn:
          description: "Opaque version number of this resource.  Populated only when the ResourceReference is managed by the USS retrieving or providing it.  Not populated when the ResourceReference is not managed by the USS retrieving or providing it (instead, the USS must obtain the OVN from the details retrieved from the managing USS)."
          $ref: '#/components/schemas/EntityOVN'
        # Start/end time for resource
        time_start:
          description: "Date/time when the resource should begin being considered for DCB."
          $ref: '#/components/schemas/Time'
        time_end:
          description: "Ending time of the Resource, if applicable. Indefinite if not set."
          $ref: '#/components/schemas/Time'
        ris_base_url:
          $ref: '#/components/schemas/ResourceUssBaseURL'
      description: "A ResourceReference (area in which a resource is present, along with other high-level information, but no details).  The DSS reports only these references and clients must exchange details and additional information peer-to-peer."    

    PutResourceDetails:
      required:
        - resource_details
      type: object
      properties:
        resource_details:
          $ref: '#/components/schemas/ResourceDetails'
      description: Create or update the resource definition of the resource with the given ID.

    TextShortType:
      maxLength: 200
      type: string
      description: A free text with a maximum length of 200 characters

    #
    # DSS-PSU schema components - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml
    #         
    EntityOVN:
      title: EntityOVN
      description: |-
        A token associated with a particular UAM Entity+version created by the DSS upon creation or modification of an Entity reference and provided to the client creating or modifying the Entity reference. The EntityOVN is stored privately by the DSS and then compared against entries in a Key provided to mutate the airspace.  The EntityOVN is also provided by
        the client whenever that client transmits the full information of the Entity (either via GET, or via a subscription notification).
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/EntityOVN
      type: string
      minLength: 16
      maxLength: 128
      example: 9d158f59-80b7-4c11-9c0c-8a2b4d936b2d
          
    Volume3D:
      description: |-
        A three-dimensional geographic volume consisting of a vertically-extruded shape.
        Exactly one outline must be specified.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/Volume3D
      type: object
      properties:
        outline_circle:
          $ref: '#/components/schemas/Circle'
          description: A circular geographic shape on the surface of the earth.
        outline_polygon:
          $ref: '#/components/schemas/Polygon'
          description: A polygonal geographic shape on the surface of the earth.
        altitude_lower:
          description: Minimum bounding altitude of this volume. Must be less than
            altitude_upper, if specified.
          $ref: '#/components/schemas/Altitude'
        altitude_upper:
          description: Maximum bounding altitude of this volume. Must be greater than
            altitude_lower, if specified.
          $ref: '#/components/schemas/Altitude'

    Volume4D:
      description: |- 
        Contiguous block of geographic spacetime.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/Volume4D
      required:
        - volume
      type: object
      properties:
        volume:
          $ref: '#/components/schemas/Volume3D'
        time_start:
          description: Beginning time of this volume. Must be before time_end.
          $ref: '#/components/schemas/Time'
        time_end:
          description: End time of this volume. Must be after time_start.
          $ref: '#/components/schemas/Time'

    Circle:
      description: |-
        A circular area on the surface of the earth.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/Circle
      type: object
      properties:
        center:
          $ref: '#/components/schemas/LatLngPoint'
        radius:
          $ref: '#/components/schemas/Radius'

    Radius:
      description: >-
        See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/Radius
      required:
        - value
        - units
      type: object
      properties:
        value:
          format: float
          description: Distance from the centerpoint of a circular area, along the
            WGS84 ellipsoid.
          type: number
          minimum: 0
          exclusiveMinimum: true
          example: 300.183
        units:
          type: string
          description: FIXM-compatible units.  Only meters ("M") are acceptable for
            UAM.
          enum:
            - M

    Polygon:
      description: |-
        An enclosed area on the earth.
        The bounding edges of this polygon are defined to be the shortest paths between connected vertices.  This means, for instance, that the edge between two points both defined at a particular latitude is not generally contained at that latitude.
        The winding order must be interpreted as the order which produces the smaller area.
        The path between two vertices is defined to be the shortest possible path between those vertices.
        Edges may not cross.
        Vertices may not be duplicated.  In particular, the final polygon vertex must not be identical to the first vertex.
            - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/Polygon
      required:
        - vertices
      type: object
      properties:
        vertices:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/LatLngPoint'

    Altitude:
      type: object
      required:
        - value
        - reference
        - units
      properties:
        value:
          description: |-
            The numeric value of the altitude. Note that min and max values are added as a sanity check. As use cases evolve and more options are made available in terms of units of measure or reference systems, these bounds may be re-evaluated.
            - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/Altitude
          type: number
          format: double
          minimum: -8000
          exclusiveMinimum: false
          maximum: 100000
          exclusiveMaximum: false
        reference:
          description: |-
            A code indicating the reference for a vertical distance. See AIXM 5.1
            and FIXM 4.2.0. Currently, UAM only allows WGS84 with no immediate
            plans to allow other options. FIXM and AIXM allow for 'SFC' (Surface Elevation) which is
            equivalent to AGL (Above Ground Level).
          type: string
          enum:
            - W84
        units:
          description: |-
            The reference quantities used to express the value of altitude. See
            FIXM 4.2. Currently, UAM only allows meters with no immediate plans
            to allow other options.
          type: string
          enum:
            - M

    Latitude:
      description: Degrees of latitude north of the equator, with reference to the WGS84 ellipsoid.
            - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/Latitude
      maximum: 90
      exclusiveMaximum: false
      minimum: -90
      exclusiveMinimum: false
      type: number
      format: double
      example: 34.123
 
    Longitude:
      description: Degrees of longitude east of the Prime Meridian, with reference to the WGS84 ellipsoid.
            - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/Longitude
      minimum: -180
      exclusiveMaximum: false
      maximum: 180
      exclusiveMinimum: false
      type: number
      format: double
      example: -118.456

    LatLngPoint:
      description: |- 
        Point on the earth's surface.
            - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/LatLngPoint
      required:
        - lat
        - lng
      type: object
      properties:
        lng:
          $ref: '#/components/schemas/Longitude'
        lat:
          $ref: '#/components/schemas/Latitude'
 
    #
    # PSU-PSU schema components - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml
    # 
    TrajectoryPoint4D:
      description: |
        A point for use within a planned trajectory.
        Tolerance around the point is standardized, and will be applicable to all operations in a given area.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D
        Currently Flight Rule is not expected to change during an operation. If it does, the following may be added as a new property:
          https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_RouteTrajectoryElementType.html#Link2A3
      required:
        - lat_lng_point
        - altitude
        - time
        - speed
        - trajectory_property_array
      type: object
      properties:
        point_designator:
          description: The name of the designated point.
            This is required for all named airspace structure point from airspace adaptation data, including vertipads.
          type: string
          example: ee123
        lat_lng_point:
          description: Latitude and Longitude of the point. If this is for a named airspace structure 
            point from airspace adaptation data, it should be the same value.
          $ref: '#/components/schemas/LatLngPoint'
        altitude:
          description: Altitude of the point. If this is for a named airspace structure 
            point from airspace adaptation data, it should be the same value.
          $ref: '#/components/schemas/Altitude'  
        time:
          description: |-
            Estimated time when the vehicle will be at the location of the TrajectoryPoint
          $ref: '#/components/schemas/Time'
        speed:
          description: |-
            Speed of the vehicle at this TrajectoryPoint.
            FIXM allows for two speed entries:  predictedAirspeed and predictedGroundspeed
          $ref: '#/components/schemas/Velocity'
        trajectory_property_array:
          description: |-
            Describes any applicable properties of the trajectory point.
            May include multiple properties per point. FIXM allows up to 2000 properties per
            trajectory point. For X4 we are allowing up to 4.
            The first point of initial plan must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_OFF
            The last point must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_ON
            A named airspace structure point from airspace adaptation data must include at a minimum: WAYPOINT
            If the airspace structure point has a SchedulingType, it must be included as follows:
              SchedulingType enum   |   Property enum
              Entry                 |   ENTRY_CORRIDOR
              Exit                  |   EXIT_CORRIDOR
              Crossing              |   CROSSING_TRACK
              Merge                 |   MERGE_TRACK
          type: array
          minItems: 1
          maxItems: 4
          items:
            $ref: '#/components/schemas/TrajectoryProperty'
          externalDocs:
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link2AC                   
      externalDocs:
        description: See FIXM 4.2.0 for further information.
        url: https://www.fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link116     
 
    TrajectoryProperty:
      description: |- 
        Describes any applicable properties of the trajectory point.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryProperty
      type: object
      required:
        - property_type
      properties:
        property_type:
          description: |
            Provides the type of trajectory point property. Enum list is based on the FIXM definition
            of TrajectoryPointPropertyType.
          type: string
          enum:
            - TOP_OF_CLIMB
            - TOP_OF_DESCENT
            - TCP_VERTICAL
            - TCP_SPEED
            - TCP_LATERAL
            - WHEELS_OFF
            - WHEELS_ON
            - AIRPORT_REFERENCE_LOCATION
            - WAYPOINT
            - ENTRY_CORRIDOR
            - EXIT_CORRIDOR
            - CROSSING_TRACK
            - MERGE_TRACK
          externalDocs:
            description: FIXM definition of TrajectoryPointPropertyType
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPointPropertyType.html#Link2B0

    Velocity:
      description: |-
        Velocity of the associated vehicle at the time_measured.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/Velocity
      required:
        - speed
        - units_speed
      type: object
      properties:
        speed:
          format: float
          type: number
          description: |-
            Speed numerical value.
          example: 200.1
        units_speed:
          type: string
          enum:
            - MetersPerSecond
            - Knots
        track:
          format: float
          type: number
          description: |-
            Direction of flight expressed as a "True North-based" ground track angle.
            This value is provided in degrees East of North with a minimum resolution of 1 degree.
            A value of 360 indicates invalid, no value, or unknown.
          example: 120
          default: 0
        speed_type:
          description: |-
            Air speed or ground speed
          type: string
          enum:
            - GROUND
            - AIR
          default: GROUND

    OperationalIntentDetails:
      description: |-
        Details of a UAM operational intent. Note that this data is not stored in the DSS; only with the clients.
      required:
        - trajectory
      type: object
      properties:
        aircraft_registration:
          type: string
          pattern: "[A-Z0-9]{1,7}"
          description: |
            A unique, alphanumeric string that identifies a civil aircraft and consists of the Aircraft
            Nationality or Common Mark and an additional alphanumeric string, the registration mark,
            assigned by the state of registry or common mark registering authority. [FIXM]
          minLength: 1
          maxLength: 7
          x-uam-data-accessibility: PUBLIC
          externalDocs:
            description: See FIXM 4.2.0 for further information.
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_AircraftRegistrationType.html#LinkBC
        operator_name:
          description: The identifier of the UAM Operator. Required if different than the PSU. 
            For X4 this can be any code that meets the required pattern, and does not need to be
            an ICAO Airline Code.
          type: string
          pattern: "[A-Z]{3}"
          example: "AAL" 
          externalDocs:
            description: See FIXM 4.2.0 for further information.
            url: https://www.fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_AircraftOperatorType.html#Link1E3
        trajectory:
          type: array
          minItems: 2
          maxItems: 1000
          description: |-
            The list of TrajectoryPoints for this operation.  This list must contain
            all significant TrajectoryPoints per the Community Based Rules (CBR). For additional insight on 
            points to be included, see the enumeration of property types in the 
            TrajectoryPoint4D model.
          items:
            $ref: '#/components/schemas/TrajectoryPoint4D'

    OperationalIntent:
      description: Full description of a UAM operational intent.
      required:
        - reference
        - details
      type: object
      properties:
        reference:
          $ref: '#/components/schemas/OperationalIntentReference'
        details:
          $ref: '#/components/schemas/OperationalIntentDetails'

    PutOperationalIntentDetailsParameters:
      description: |-
        Parameters of a message informing of detailed information for a peer operational intent.
        Pushed (by a client, not the DSS) directly to clients with subscriptions when
        another client makes a change to airspace within a cell with a subscription.
      required:
        - operational_intent_id
        - subscriptions
      type: object
      properties:
        operational_intent_id:
          description: ID of operational intent that has changed.
          $ref: '#/components/schemas/EntityID'
        operational_intent:
          description: |-
            Full information about the operational intent that has changed.  If this field is omitted,
            the operational intent was deleted.  The `ovn` field in the nested `reference` must be
            populated.
          $ref: '#/components/schemas/OperationalIntent'
        subscriptions:
          type: array
          description: Subscription(s) prompting this notification.
          items:
            $ref: '#/components/schemas/SubscriptionState'
          minItems: 1

    #
    # USS-to-USS schema components where USS is Unmanned Aircraft Systems Service Providers
    # from https://www.faa.gov/sites/faa.gov/files/2022-08/UTM_ConOps_v2.pdf
    # See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml
    #
    UssAvailabilityState:
      type: string
      enum:
      - Unknown
      - Normal
      - Down
      description: |-
        A USS is presumed to be in the Unknown state absent indication otherwise by a USS with
        availability arbitration scope.  Upon determination via availability arbitration, a USS is
        Down when it does not respond appropriately, and a Down USS may not perform the following
        operations in the DSS:
          * Create an operational intent in the Accepted or Activated states
          * Modify an operational intent whose new or unchanged state is Accepted or Activated
          * Delete an operational intent
        A USS in the Unknown state possesses all the capabilities, within the DSS, of a USS in the
        Normal state.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/UssAvailabilityState

    OperationalIntentState:
      description: |-
        State of an operational intent.
        
        'Proposed': This Operation is created and shared, but not yet in use; see standard text for more details.
        
        'Accepted': This Operation is strategically coordinated at its Acceptance Horizon, or time before its proposed 
        take-off time. Latest airspace information has been evaluated and a DCB check has completed prior to transition to 
        this state.
        
        'Canceled': This Operation has never been in Activated State and will not be used.

        'Activated': This Operation is in active use; see standard text for more details.
        This Operation must have been in Accepted state before transition to this state.
        
        'Nonconforming': This Operation is not conforming to its operational intent per the Community Based Rules (CBR).
        
        'Contingent': UAM Aircraft (UA) is considered unrecoverable so unable to conform with its coordinate operational intent; see
        standard text for more details. 
        This state must transition to Completed.

        'Completed': This Operation is no longer in active use; see standard text for more details.
        
      type: string
      enum:
        - Proposed
        - Accepted
        - Canceled
        - Activated
        - Nonconforming
        - Contingent
        - Completed

    SubscriptionState:
      description: |-
        State of subscription which is causing a notification to be sent.
      required:
        - subscription_id
        - notification_index
      type: object
      properties:
        subscription_id:
          $ref: '#/components/schemas/SubscriptionID'
        notification_index:
          $ref: '#/components/schemas/SubscriptionNotificationIndex'
 
    SubscriptionNotificationIndex:
      format: int32
      description: Tracks the notifications sent for a subscription so the subscriber
        can detect missed notifications more easily.
      type: integer
      minimum: 0
      exclusiveMinimum: false
      default: 0

    UssBaseURL:
      description: |-
        The base URL of a USS implementation of part or all of the USS-USS API. Per the USS-USS API, the full URL of a particular resource can be constructed by appending, e.g., `/uss/v1/{resource}/{id}` to this base URL. Accordingly, this URL may not have a trailing '/' character.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/UssBaseURL
      type: string
      example: https://uss.example.com/utm
      
    OperationalIntentUssBaseURL:
      description: |-
        The base URL of a USS implementation that implements the parts of the USS-USS API necessary for
        providing the details of this operational intent, and telemetry during non-conformance or contingency,
        if applicable.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/OperationalIntentUssBaseURL
      $ref: '#/components/schemas/UssBaseURL'
        
    OperationalIntentReference:
      description: |-
        The high-level information of a planned or active operational intent with the URL
        of a USS to query for details.  Note: 'ovn' is returned ONLY to the USS that
        created the operational intent but NEVER to other USS instances.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/OperationalIntentReference
      required:
        - id
        - manager
        - uss_availability
        - version
        - state
        - time_start
        - time_end
        - uss_base_url
        - subscription_id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EntityID'
        manager:
          type: string
          example: uss1
          description: |-
            Created by the DSS based on creating client's ID (via access token).  Used internal
            to the DSS for restricting mutation and deletion operations to manager.  Used by USSs
            to reject operational intent update notifications originating from a USS that does not manage
            the operational intent.
        uss_availability:
          $ref: '#/components/schemas/UssAvailabilityState'
        version:
          type: integer
          format: int32
          example: 1
          description: |-
            Numeric version of this operational intent which increments upon each change in the operational intent,
            regardless of whether any field of the operational intent reference changes.  A USS with the
            details of this operational intent when it was at a particular version does not need to retrieve
            the details again until the version changes.
        state:
          $ref: '#/components/schemas/OperationalIntentState'
        ovn:
          description: |-
            Opaque version number of this operational intent.  Populated only when the OperationalIntentReference
            is managed by the USS retrieving or providing it.  Not populated when the
            OperationalIntentReference is not managed by the USS retrieving or providing it (instead, the
            USS must obtain the OVN from the details retrieved from the managing USS).
          $ref: '#/components/schemas/EntityOVN'
        time_start:
          description: Beginning time of operational intent.
          $ref: '#/components/schemas/Time'
        time_end:
          description: End time of operational intent.
          $ref: '#/components/schemas/Time'
        uss_base_url:
          $ref: '#/components/schemas/OperationalIntentUssBaseURL'
        subscription_id:
          description: |-
            The ID of the subscription that is ensuring the operational intent manager receives relevant
            airspace updates.
          $ref: '#/components/schemas/SubscriptionID'

    SubscriptionID:
      description: |-
        Identifier for a subscription communicated through the DSS.  Formatted
        as a UUIDv4.
        - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/SubscriptionID
      $ref: '#/components/schemas/UUIDv4Format'
      example: 78ea3fe8-71c2-4f5c-9b44-9c02f5563c6f
      
    UUIDv4Format:
      description: |-
        String whose format matches a version-4 UUID according to RFC 4122.
        See https://www.rfc-editor.org/info/rfc4122
      maxLength: 36
      minLength: 36
      type: string
      format: uuid
      pattern: >-
        '^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-4[0-9a-fA-F]{3}\\-[8-b][0-9a-fA-F]{3}\\-[0-9a-fA-F]{12}$'
      example: 03e5572a-f733-49af-bc14-8a18bd53ee39

    EntityID:
      description: |-
        Identifier for an Entity, like an operation, communicated through the DSS. Formatted as a UUIDv4.
            - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/EntityID
      $ref: '#/components/schemas/UUIDv4Format'
      example: 2f8343be-6482-4d1b-a474-16847e01af1e
      
    Time:
      required:
        - value
        - format
      type: object
      properties:
        value:
          type: string
          description: RFC3339-formatted time/date string. The time zone must be 'Z'.
          format: date-time
          pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{1,3})?Z$"
          example: '1985-04-12T23:20:50.52Z'
        format:
          type: string
          enum:
            - RFC3339
            
    TimeParam:
      description: >- 
        RFC3339-formatted time/date string. The time zone must be 'Z'. See https://www.rfc-editor.org/rfc/rfc3339
      type: string
      format: date-time
      pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{1,3})?Z$"
      example: '1985-04-12T23:20:50.52Z'