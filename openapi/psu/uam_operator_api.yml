openapi: 3.0.0
servers:
  - description: Fleet Operator-PSU
    url: 'https://arc.nasa.gov/npsu/operator'
info:
  description: |- 
    Interface between Fleet Operator (FO) to Provider of Services for Urban Air Mobility (PSU) to get availability of resources for planning operations from Resource Planning Service (RPS). 
    - Provider of Services for Urban Air Mobility (PSU) API, see https://github.com/nasa/uam-apis/blob/master/openapi/psu/psu_api.yml
    - Discovery & Synchronization Service (DSS) API, see https://github.com/nasa/uam-apis/blob/master/openapi/psu/dss_api.yml
    - Capacity Information Service (CIS) model in https://github.com/nasa/uam-apis/blob/master/openapi/cis/cis_model.yml
  version: 3.1.3
  title: AMP TCL-1 Fleet Operator-PSU API
  contact:
    name: NASA

# Assumption: Resource Planning Service has already input 
# available capacities, constraints, etc. for each resource.
# Based on Sequence Diagrams documented in https://atmconfluence.arc.nasa.gov/display/ATMX/X5+Sequence+Diagrams+and+APIs
security:
  - Authority:
    - operations.non-sensitive.read
    - operations.non-sensitive.write

tags:
  - name: Adaptation
    description: >-
      Endpoints exposed between Operator-PSU for interactions about airspace structure or adaptation data.
  - name: Resources
    description: >-
      Endpoints exposed between Operator-PSU for interactions about capacities of resources.
  - name: Scheduling
    description: |-
      Endpoints exposed by Resources Planning Services (RPS) for resource scheduling based on spacing and sequencing constraints.
  - name: Operations
    description: Add and view Operation. From X4 UAM Operator API with changes for X5.
  - name: Messages
    description: Add and view Operator Messages. From X4 UAM Operator API.
  - name: Positions
    description: Add Operation Positions. From X4 UAM Operator API.
  - name: Constraints for elevated privileges
    description: Add and view Constraints.  Constraints endpoints require elevated FIMS privileges. From X4 UAM Operator API.
    
paths:
  /resources_availability/query:
    post:
      tags:
        - Resources
      security:
        - Authority:
            - operations.non-sensitive.read
      summary: >-
        Get availability of resources for scheduling an operation. Availability is mainly determined based on time when an aircraft will arrive, a.k.a. Estimated Time of Arrival (ETA), at resources.
      description: |- 
        Factors like aircraft speed, altitude, etc. may be needed to determine resource availability. Return earliest available time when all resources, part of 4-D trajectory of operational intent, are available. 
      requestBody:
        description: >-
          With information about resources planned for 4-D trajectory of operation plan. 4-D trajectory is based on PSU-to-PSU API - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesPlanningRequest'
        required: true
      responses:
        '200':
          description: >- 
            OK. Resource has availability information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesAvailabilityResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            Bad request. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, etc.) Examples:
            - No trajectory provided.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Unauthorized. Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Forbidden. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Not found. URL is not recognized or endpoint is invalid. Also, if the RPS-DCB cannot find any managed resource within given trajectory.
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            Method not allowed. The request method is known by the server but is not supported by the target resources. Examples: 
            - Resource without a constraint stating criteria for within a certain time interval cannot respond to this query.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            RPS-DCB server or processing error.
            
  /resources_available_volumes/query:
    post:
      tags:
        - Resources
      security:
        - Authority:
            - operations.non-sensitive.read
      summary: >-
        Get volumes for resources, with availability checks, needed by an operation intent for submission to a PSU network. 
      description: |-
        Includes availability confirmation for all resources managed by RPS-DCB. Availability is mainly determined based on time when an aircraft will arrive, a.k.a. Estimated Time of Arrival (ETA), at resources. Factors like aircraft speed, altitude, etc. may be needed to determine resource availability. 4-D volumes, a.k.a. extents, for each resource is needed for operational intent submission to a PSU network.
      requestBody:
        description: |-
          With information about resources planned within 4-D trajectory of an operation plan. Based on PSU-to-PSU API
          - See https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesPlanningRequest'
        required: true
      responses:
        '200':
          description: >- 
            OK. Resource has information about its volume and availability.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesAvailableVolumesResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            Bad request. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, etc.) Examples:
            - No trajectory provided.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Unauthorized. Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Forbidden. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Not found. URL is not recognized or endpoint is invalid. Also, if the RPS-DCB cannot find any managed resource within given trajectory.
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            Method not allowed. The request method is known by the server but is not supported by the target resources. Examples: 
            - Resource without a constraint stating criteria for within a certain time interval cannot respond to this query.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            RPS-DCB server or processing error.

  /resources_volumes/query:
    post:
      tags:
        - Resources
      security:
        - Authority:
            - operations.non-sensitive.read
      summary: >-
        Get all 4-D resource volumes, with start and end timings, for each 4-D trajectory point planned at resource within an operation without availability checks.
      description: |- 
        Return array of 4-D, with start and end timings, resource volumes without checking for resource availability against 4-D trajectory point planned at resource.
      requestBody:
        description: |-
          With information about start and end timings of operation and resource planned within 4-D trajectory of operation plan. Based on PSU-to-PSU API 
          - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesPlanningRequest'
        required: true
      responses:
        '200':
          description: >- 
            OK. Return 4-D resource volume with start and end timings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesEntityVolumesResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            Bad request. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, etc.) Examples:
            - No trajectory provided.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Unauthorized. Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Forbidden. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Not found. URL is not recognized or endpoint is invalid. Also, if the RPS-DCB cannot find any managed resource within given trajectory.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            RPS-DCB server or processing error.

  /resources_scheduling:
    post:
      tags:
        - Scheduling
      security:
        - Authority:
            - operations.non-sensitive.read
      summary: >-
        Request service to check timings in 4-D trajectory against each given resource constraint information, like spacing, overtake rules, etc. between aircraft at resources. If needed, adjust Estimated Time of Arrival (ETA) at trajectory points within given 4-D trajectory so aircraft arriving at entry, exit, crossing or merge resource, within controlled airspace, do not violate constraints. 
      description: |-
        Factors like aircraft speed, altitude, etc. may be needed to determine availability of resources. Minimum delay of arrival time at a resource needs to satisfy spacing criteria for that resource. Spacing should be an actual usable slot, not just a delay required to follow aircraft to make room; thus, should consider leading and trailing spacings between aircraft in front and aircraft behind. Return 4-D trajectory, with or without adjusted timings, and one of these scheduling outcomes:
        
            - FEASIBLE_AS_IS means timings in operation's 4-D trajectory were not changed.
            - FEASIBLE_WITH_CHANGE means timings in operation's 4-D trajectory were changed.
            - INFEASIBLE means unable to adjust operation's 4-D trajectory even by changing timings would still not satisfy resource constraints.
      requestBody:
        description: |-
          All 4-D trajectory of operation plan. Based on PSU-to-PSU API 
          - see https://raw.githubusercontent.com/nasa/uam-apis/x4/openapi/psu/psu_api.yml#/components/schemas/OperationalIntent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesSchedulingRequest'
        required: true
      responses:
        '200':
          description: >- 
            OK. Service has information to perform scheduling at resource. Returns feasible timings after scheduling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesSchedulingResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            Bad request. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Unauthorized. Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Forbidden. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Not found. URL is not recognized or endpoint is invalid. Also, if the RPS-SS cannot find any managed resource within given trajectory.
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: >-
            Method not allowed. The request method is known by the server but is not supported by the target resources. For example, this API does not allow GET on a resource.
        # '406': FREDDIE PSU will wrap this in a 500 error with the error message in OperatorResponse, but it will not return 406 to Operator.
        #   content:
        #     application/json:
        #       schema:
        #         $ref: '#/components/schemas/OperatorResponse'
        #   description: |-
        #     No available 4-D trajectory can satisfy resource constraints. No usable slot can be found with leading and trailing spacing between aircraft that satisfies criteria at resource so unable to provide Earliest Spaced Time of Arrival (ESTA) at resource.
        #     - INFEASIBLE should be in reason message returned.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
          description: |-
            RPS server or processing error.
            
  /adaptation/{adaptationname}:
    get:
      tags:
      - Adaptation
      security:
        - Authority:
          - operations.non-sensitive.read
      summary: Retrieve the specified adaptation details
      parameters:
        - name: adaptationname
          in: path
          description: UUID associated with specific adaptation
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: "DFW"
      responses:
        "200":
          description: Adaptation object matching adaptation name requested. See https://github.com/nasa/uam-apis/blob/master/openapi/asds/asds_api.yml
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/asds/asds_api.yml#/components/schemas/Adaptation'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "401":
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "403":
          description: Unauthorized operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
                
  #
  # From existing X5 UAM Operator API schema components
  #      
  "/messages":
    post:
      tags:
        - Messages
      summary: Submit Message for a GUFI
      security:
        - Authority:
          - operations.non-sensitive.write
      responses:
        "201":
          description: >-
            Acknowledge that request was received. This does not guarantee that the Message was successfully processed in the PSU network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        description: msg
        required: true

  "/messages/{gufi}":
    get:
      tags:
        - Messages
      summary: Get Messages by GUFI
      security:
        - Authority:
          - operations.non-sensitive.read
      parameters:
        - name: gufi
          in: path
          description: gufi
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "404":
          description: The Operation for the GUFI is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'

  "/operations":
    post:
      tags:
        - Operations
      summary: Propose a new Operation or Submit 'Proposed' operation to get 'Accepted'
      security:
        - Authority:
          - operations.non-sensitive.write
      description: >-
        If the requestBody doesn't contain a GUFI, a random GUFI shall be assigned to the
        Operation.
        If the requestBody contains a GUFI, then the supplied GUFI will be
        used for the new operation.
      responses:
        "200":
          description: >-
            Acknowledge that request was received. This does not guarantee that the Operation was successfully added or updated to the PSU network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposeOperationParameters'
        description: Operational Plan
        required: true
    put:
      tags:
        - Operations
      summary: Update an Operation
      security:
        - Authority:
          - operations.non-sensitive.write
      description: >-
        Update an existing operation, which is specified by gufi in the request
      responses:
        "200":
          description: >-
            Acknowledge that request was received. This does not guarantee that the Operation was successfully updated in the PSU network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "404":
          description: The Operation for the gufi is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOperationParameters'
        description: Operational Plan
        required: true

  "/operations/{gufi}":
    get:
      tags:
        - Operations
      summary: Retrieve an Operation by GUFI.
      description: Retrieve an Operation by GUFI.  Returns a 404 if GUFI is not found.
      security:
        - Authority:
          - operations.non-sensitive.read
      parameters:
        - in: path
          name: gufi
          required: true
          description: GUFI of the Operation being requested.
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "404":
          description: The Operation for the GUFI is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'

  "/positions":
    post:
      tags:
        - Positions
      summary: Submit a Position to NUP
      description: >-
        Submit a Position to NUP.
      security:
        - Authority:
          - operations.non-sensitive.write
      operationId: postPosition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
        description: The intended Position
        required: true
      responses:
        "201":
          description: >-
            Acknowledge that Position was received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "400":
          description: Invalid Request was received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'
        "404":
          description: The Operation for the GUFI is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorResponse'

components:
  securitySchemes:
    #
    # From existing X5 UAM Operator API schema components
    #      
    Authority:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://some.host/fimsAuthServer/oauth/token
          scopes:
            operations.non-sensitive.read: Allow read of non-sensitive operations
            operations.non-sensitive.write: Allow write of non-sensitive operations
      description: |-
        Authorization from, or on behalf of, an authorization authority.  This authority shall issue access tokens that are JSON Web Tokens as defined in RFC 7519, using the `RS256` algorithm for the signature, publish to all providers the public key for verifying that signature, and implement standard OAuth server discovery mechanisms as described in RFC 8414.
        The following fields shall be included in the JWT claim for access tokens issued by this authority:
            * `iss`, with the URL at which the token generation request was received.
            * `exp`, with a time no further than 1 hour in the future.
            * `sub`, with unique ID of the client requesting the access token.
            * `scope`, with an array of strings indicating the scopes granted.
            * `jti`, according to RFC 7519.
        Clients shall provide these access tokens in an `Authorization` header in the form `Bearer <token>` in accordance with RFC 6750.
          
  schemas:
    #
    # From RPS API schema components
    # See https://developer.nasa.gov/uam/api/tree/uam/external/rps
    #
    # ResourcesQueryRequest:
    #   type: object
    #   description: |-
    #     Request body to get availability time windows when resource, managed by the RPS, is available for scheduling an operation. Availability determination is mainly based on time when an aircraft will arrive, a.k.a. Estimated Time of Arrival (ETA), at resource. Factors like aircraft speed, altitude, etc. may need to be considered to determine availability, 4-D volume, etc. at resource needed for operational intent submission.
    #   required:
    #     - gufi
    #     - trajectory
    #   properties:
    #     gufi:
    #       description: >-
    #         Should be Operational Intent identifier for use in a response or an OperatorResponse.
    #       $ref: '#/components/schemas/EntityUUID'
    #     trajectory:
    #       type: array
    #       minItems: 1
    #       maxItems: 1000
    #       description: |-
    #         The list of TrajectoryPoints for an operation that need resources.  This list must contain all significant TrajectoryPoints per the Community Based Rules (CBR). For additional insight on points to be included, see the enumeration of property types in the TrajectoryPoint4D model.
    #       items:
    #         $ref: '#/components/schemas/TrajectoryPoint4D'
    #     missing_operational_intents:
    #       type: string
    #       description: |-
    #         Note: Stringified 'missing_operational_intents' returned by DSS for a AirspaceConflictResponse with response code 409.
    #         - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/AirspaceConflictResponse
    #           - List of operational intent references for which current proof of knowledge was not provided. If this field is present and contains elements, the operator should query, using uss_base_url, for details of these operational intents and correct OVNs.  The OVNs can be used to update the key for re-submission to DSS.
    #       example: "[]"
            
    ResourcesPlanningRequest:
      type: object
      description: |-
        Request body to check availability of resource, managed by the RPS, is available for scheduling an operation. Availability determination is mainly based on time when an aircraft will arrive, a.k.a. Estimated Time of Arrival (ETA), at resource. Factors like aircraft speed, altitude, etc. may need to be considered to determine availability, 4-D volume, etc. at resource needed for operational intent submission.
      required:
        - gufi
        - trajectory
      properties:
        gufi:
          description: >-
            Can be Operational Intent identifier for use in a response or an ErrorResponse.
          $ref: '#/components/schemas/EntityUUID'
        trajectory:
          type: array
          minItems: 1
          maxItems: 1000
          description: |-
            The list of TrajectoryPoints for an operation that need resources.  This list must contain all significant TrajectoryPoints per the Community Based Rules (CBR). For additional insight on points to be included, see the enumeration of property types in the TrajectoryPoint4D model.
          items:
            $ref: '#/components/schemas/TrajectoryPoint4D'
        missing_operational_intents:
          type: string
          description: |-
            Note: Stringified 'missing_operational_intents' returned by DSS for a AirspaceConflictResponse with response code 409.
            - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/AirspaceConflictResponse
              - List of operational intent references for which current proof of knowledge was not provided. If this field is present and contains elements, the operator should query, using uss_base_url, for details of these operational intents and correct OVNs.  The OVNs can be used to update the key for re-submission to DSS.
          example: "[]"
          
    ResourcesSchedulingRequest:
      type: object
      description: |-
        Request body given to schedule resources needed by 4-D trajectories of operational intent planned.  
        Based on constraint information, like spacing between aircraft, overtake rules, etc. at resources 
        for entry, exit, crossing or merge within controlled airspace, timings in 4-D trajectories may or 
        may not have to be adjusted to satisfy constraints.
      required:
        - gufi
        - trajectory
      properties:
        gufi:
          description: >-
            Should be Operational Intent identifier for use in a response or an ErrorResponse.
          $ref: '#/components/schemas/EntityUUID'
        trajectory:
          type: array
          minItems: 1
          maxItems: 1000
          description: |-
            The list of TrajectoryPoints for this scheduling request. This list must contain all significant TrajectoryPoints. For additional insight on points to be included, see the enumeration of property types in the TrajectoryPoint4D model.
          items:
            $ref: '#/components/schemas/TrajectoryPoint4D'
        missing_operational_intents:
          type: string
          description: |-
            Note: Stringified 'missing_operational_intents' returned by DSS for a AirspaceConflictResponse with response code 409.
            - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/AirspaceConflictResponse
              - List of operational intent references for which current proof of knowledge was not provided. If this field is present and contains elements, the operator should query, using uss_base_url, for details of these operational intents and correct OVNs.  The OVNs can be used to update the key for re-submission to DSS.
          example: "[]"

    ResourcesAvailabilityResponse:
      type: object
      description: |-
        Response to get availability of resources, managed by RPS-DCB, for an operation. Earliest available time is based on 4-D trajectory in operation and should be either requested time, for on-time departure, or later time, for delayed departure, when all resources will be available for an operation.
      required:
        - gufi
        - earliest_available_time
      properties:
        gufi:
          description: >-
            From original request which could be operational intent identifier.
          $ref: '#/components/schemas/EntityUUID'
        earliest_available_time:
          description: |-
            Earliest available time when the vehicle can be at the location of the first resource of an operation. 
          $ref: '#/components/schemas/Time'

    ResourceAvailability:
      type: object
      required:
        - resource
        - available_time_intervals
      description: |-
        Availability properties for a defined resource. Should be interpreted as operations can still be scheduled at resource within start to end time intervals.
        - See https://github.com/nasa/uam-apis/blob/master/openapi/rps/rps_dcb_api.yml
      properties:
        resource:
          type: string
          description: >-
            the name of the resource. This name matches the 'point_designator' field in the TrajectoryPoint4D object within the operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/blob/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D.
          example: 'DF101'
        available_time_intervals:
          type: array
          description: >- 
            Array of available time intervals for this resource.
          items:
            $ref: '#/components/schemas/TimeInterval'
          default: []
          
    TimeInterval:
      type: object
      description: |-
        Start and end time interval. Time interval is half-open with the lower bound, start time, included and upper bound, end time, excluded. For example, this will be interpreted as [12:00, 12:12) so next interval can be [12:12, 12:24).
        - See https://github.com/nasa/uam-apis/blob/master/openapi/rps/rps_dcb_api.yml
      required:
        - time_start
        - time_end
      properties:
        time_start:
          description: >- 
            Beginning time of this availability time interval. Must be before time_end.
          $ref: '#/components/schemas/Time'
        time_end:
          description: >- 
            End time of this availability time interval. Must be after time_start.
          $ref: '#/components/schemas/Time'

    ResourcesAvailableVolumesResponse:
      type: object
      description: |-
        Response to get details for planned resources, managed by RPS-DCB, needed within an operational intent for submission to a PSU network. Includes confirmation that resources are still available.
      required:
        - gufi
        - resources_available
      properties:
        gufi:
          description: >-
            From original request which could be operational intent identifier.
          $ref: '#/components/schemas/EntityUUID'
        resources_available:
          type: boolean
          description: >-
            Confirmation that resources are still available.
          default: True
        resources_volume:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAvailabilityVolume'
          default: []
        ovn_array:
          type: array
          description: |-
            DSS Opaque Version Numbers (OVN) of any other operational intents:
            - Already scheduled at resource.
            - Not using resource but was from 'missing_operational_intents' returned by DSS due to a AirspaceConflictResponse with response code 409.
              - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/AirspaceConflictResponse
          items:
            $ref: '#/components/schemas/EntityOVN'
          default: []

    ResourceAvailabilityVolume:
      description: |-
        Information for a resource needed in operational intent 4-D trajectory for planning and submission. Includes indication whether resource is still available, 4-D volume or extent for resource and array of DSS Opaque Version Numbers (OVN).
        - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml
      type: object
      required:
        - resource
        - resource_available
      properties:
        resource:
          type: string
          description: >-
            Name of resource matches the 'point_designator' field in the TrajectoryPoint4D object within the operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D.
        resource_available:
          type: boolean
          description: >-
            Confirmation that this resource is still available.
          default: True
        resource_volume:
          description: >- 
            3-D volume with start and end timings to schedule the resource
          nullable: true
          $ref: '#/components/schemas/Volume4D'

    ResourcesEntityVolumesResponse:
      description: |-
        Response to query to get 4-D resource volume, managed by the RPS, with start and end timings, for a planned 4-D trajectory point in operation intent using resource.
      required:
        - gufi
        - resources_volumes
      properties:
        gufi:
          description: >-
            From original request which should be operational intent identifier.
          $ref: '#/components/schemas/EntityUUID'
        resources_volumes:
          description: >- 
            4-D volume for resource, with start and end timings, to schedule the resource
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/ResourceVolume'
          default: []

    ResourceVolume:
      type: object
      description: |-
        Response to get volume for planned resource, managed by the RPS, needed within an operational intent for submission.
      required:
        - resource
        - resource_volume
      properties:
        resource:
          type: string
          description: >-
            Name of resource matches the 'point_designator' field in the TrajectoryPoint4D object within the operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/blob/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D.
        resource_volume:
          description: >- 
            3-D volume with start and end timings to schedule the resource
          nullable: true
          $ref: '#/components/schemas/Volume4D'

    ResourceName:
      title: ResourceName
      description: |-
        Name of resource that matches 'point_designator' field in TrajectoryPoint4D object within operational intent - see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D.
      type: string
      minLength: 1
      maxLength: 128
      example: EB003

    ResourcesSchedulingResponse:
      type: object
      description: |-
        Information about outcome of scheduling of resources for operational intent with Earliest Spaced Time of Arrival (ESTA) at waypoints within original 4-D trajectory.
      required:
        - gufi
        - scheduling_result
        - trajectory
        - resources
        - resources_volumes
        - ovn_array
      properties:
        gufi:
          description: >-
            Should be Operational Intent identifier for use in this response or an ErrorResponse.
          $ref: '#/components/schemas/EntityUUID'
        scheduling_result:
          type: string
          enum:
            - FEASIBLE_AS_IS
            - FEASIBLE_WITH_CHANGE
          description: |-
            Outcomes of scheduling resources for operational intents are:
            * FEASIBLE_AS_IS means timings in operation 4-D trajectories were not changed.
            * FEASIBLE_WITH_CHANGE means timings in operation 4-D trajectories were changed.
        trajectory:
          type: array
          minItems: 1
          maxItems: 1000
          description: |-
            The list of 4-D trajectories from this scheduling request with original or delayed timings depending on post sequencing, spacing, etc. constraints of resources. This list must contain all significant trajectory points. For additional insight on points to be included, see the enumeration of property types in the TrajectoryPoint4D model.
          items:
            $ref: '#/components/schemas/TrajectoryPoint4D'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceName'
          default: []
        resources_volumes:
          description: >- 
            3-D volumes, with start and end timings, to schedule resource in operational intent
          type: array
          items:
            $ref: '#/components/schemas/Volume4D'
          default: []
        ovn_array:
          type: array
          description: >-
            DSS Opaque Version Numbers (OVN) of other operational intents already scheduled at resource.
          items:
            $ref: '#/components/schemas/EntityOVN'
          default: []

    #
    # RI-DCB and DSS-DCB schema components.
    # Based on astm-uam-psu-ris-0.0.0.yaml as of Feb 13, 2025.
    # Based on astm-uam-psu-dss-0.0.0.yaml as of Feb 13, 2025.
    # Based on astm-uam-psu-dcb-0.0.0.yaml as of Feb 13, 2025.
    #
    ContributingOperation:
      type: object
      description: Id and OVN of an operation contributing to demand or imbalance. 
      required:
        - operational_intent_id
        - operation_ovn
      properties:
        operation_ovn:
          $ref: '#/components/schemas/EntityOVN'
          description: OVN of the operation
        operational_intent_id:
          $ref: '#/components/schemas/EntityUUID'
          description: Operational intent ID of the operation
        resource_usage:
          description: |-
            Duration of time for a volume based resource, or crossing Time
            for a waypoint based resource. 
          $ref: '#/components/schemas/ResourceOccupationDuration'
    
    DemandCapacityImbalanceInterval:
      type: object
      description: >-
        Returns a time range, imbalance status for the range, and all operation OVNs contributing to 
        demand within that time range.
      required:
        - time_start
        - time_end
        - imbalance_magnitude
        - imbalance_status
        - operations
      properties:
        time_start:
          description: Beginning time of the time bin for computing this demand capacity imbalance status. If the capacity requirements
            are based on rate or an instantaneous limit, this value will be the time when that capacity rule began. Must be before time_end.
          anyOf:
          - $ref: '#/components/schemas/Time'
        time_end:
          description: End time of the time bin for computing this demand capacity imbalance status. Can be empty if the capacity rule
            in place is an instantaneous or rate limit.  If included, must be after time_start.
          anyOf:
          - $ref: '#/components/schemas/Time'     
        imbalance_magnitude:
          type: number
          format: double
          description: The magnitude of demand capacity imbalance. Negative values indicate available capacity, zero indicates at capacity, 
            and positive values indicate over capacity
        imbalance_status:
          type: string
          enum:
            - OVER_CAPACITY
            - AT_CAPACITY
            - UNDER_CAPACITY
          description: >-
            string indicating whether corresponding resource is over, at or under capacity
        operations:
          type: array
          items:
            $ref: '#/components/schemas/ContributingOperation'
          minItems: 0
          description: >-
            IDs and OVNs for all operations contributing to the reported demand at this resource at this time bin

    ResourceOccupationDuration:
      required:
       - entry_time
       - exit_time
      type: object
      properties:
        entry_time:
          $ref: '#/components/schemas/Time'
        exit_time:
          $ref: '#/components/schemas/Time'
          
    ResourcesImbalanced:
      type: object
      required:
        - resources_imbalanced
      properties:
        resources_imbalanced:
          type: array
          items:
            $ref: '#/components/schemas/ResourceDemandCapacityImbalances'

    ResourceDemandCapacityImbalances:
      type: object
      description: >-
        a set of properties describing a resource imbalance status that includes a resource reference from the adaptation data, 
        the start and end time of the time bin used for demand-capacity imbalance computation, the magnitude of the imbalance, 
        the imbalance status, and a potentially empty set of OVNs for all operations contributing to the reported demand at this resource at this time bin
      required:
        - resource_id
        - resource_imbalances
      properties:
        resource_id:
            $ref: '#/components/schemas/EntityUUID'
        resource_ovn:
          $ref: '#/components/schemas/EntityOVN'
          description: >-
            OVN proving knowledge of the latest status & capacity info for the resource. 
        resource_imbalances:
          type: array
          items:
            $ref: '#/components/schemas/DemandCapacityImbalanceInterval'
          description: List of imbalance time ranges and determinations for the resource.

    #
    # DSS-PSU schema components
    # See https://raw.githubusercontent.com/nasa/uam-apis/blob/master/openapi/psu/dss_api.yml
    #         
    EntityOVN:
      title: EntityOVN
      description: |-
        A token associated with a particular UAM Entity+version created by the DSS upon creation or modification of an Entity reference and provided to the client creating or modifying the Entity reference. The EntityOVN is stored privately by the DSS and then compared against entries in a Key provided to mutate the airspace.  The EntityOVN is also provided by
        the client whenever that client transmits the full information of the Entity (either via GET, or via a subscription notification).
        - See https://raw.githubusercontent.com/nasa/uam-apis/blob/master/openapi/psu/dss_api.yml#/components/schemas/EntityOVN
      type: string
      minLength: 16
      maxLength: 128
      example: 9d158f59-80b7-4c11-9c0c-8a2b4d936b2d
      
    #
    # From existing X5 UAM Operator API schema components
    #      
    Operation:
      required:
        - aircraft_registration
        - gufi
        - volumes
        - trajectory
      type: object
      properties:
        gufi:
          $ref: '#/components/schemas/EntityUUID'
        operator_name:
          $ref: '#/components/schemas/OperatorName'
        uss_name:
          type: string
          description: USS (Unmanned Aircraft System Service Provider) name that owns the operation.
        update_time:
          description: >-
            A timestamp set by the USS any time the state of the operation is
            updated within the USS Network.
          type: string
          format: date-time
          example: "2015-08-20T14:11:56.118Z"
        state:
          $ref: '#/components/schemas/OperationState'
        volumes:
          $ref: '#/components/schemas/VolumeArray'
        # version:
        #   description: the version number of the operation
        #   type: integer
        #   format: int32
        aircraft_registration:
          $ref: '#/components/schemas/AircraftRegistration'
        trajectory:
          $ref: '#/components/schemas/TrajectoryArray'
        # subscription_id:
        #   $ref: '#/components/schemas/SubscriptionUUID'

    ProposeOperationParameters:
      required:
        - aircraft_registration
        - volumes
        - trajectory
        - ovn_array
      type: object
      properties:
        request_type:
          type: string
          description: >-
            PROPOSE: Operation is proposed. The operation state will be Proposed if success, or Rejected if failure.
            SUBMIT: Operation is submitted. The operation state will be Accepted if success, or not changed if failure.
          enum:
            - PROPOSE
            - SUBMIT
          default:
            PROPOSE
        gufi:
          $ref: '#/components/schemas/EntityUUID'
        aircraft_registration:
          $ref: '#/components/schemas/AircraftRegistration'
        trajectory:
          $ref: '#/components/schemas/TrajectoryArray'
        volumes:
          $ref: '#/components/schemas/VolumeArray'
        operator_name:
          $ref: '#/components/schemas/OperatorName'
        # subscription_id:
        #   $ref: '#/components/schemas/SubscriptionUUID'
        ovn_array:
          type: array
          description: >-
            DSS Opaque Version Numbers (OVN) of any other operational intents already scheduled at resource.
          items:
            $ref: '#/components/schemas/EntityOVN'
          default: []

    # Below states defined matches OperationalIntentState defined in by Discovery Synchronization Service (DSS) API
    OperationState:
      description: |-
        State of an operational intent.

        'Proposed': This Operation is created and shared, but not yet in use.
        The create or update request for this operational intent reference must include a Key containing all OVNs for
        all relevant Entities.
        
        'Accepted': This Operation is strategically coordinated at its Acceptance Horizon, or time before its proposed 
        take-off time. Latest airspace information has been evaluated and a DCB check has completed prior to transition to 
        this state. 
        The create or update request for this operational intent reference must include a Key containing all OVNs for
        all relevant Entities.
        
        'Canceled': This Operation has never been in Activated State and will not be used.
        The create or update request for this operational intent may omit a Key in this case because the operational intent 
        is not flown and does not need to deconflict.

        'Activated': This Operation is in active use.
        This Operation must have been in Accepted state before transition to this state.
        The create or update request for this operational intent reference must include a Key containing all OVNs for
        all relevant Entities.
        
        'Nonconforming': This Operation is not conforming to its operational intent per the Community Based Rules (CBR). 
        The create or update request for this operational intent may omit a Key 
        in this case because the operational intent is being adjusted as flown and cannot necessarily deconflict.
        
        'Contingent': UAM Aircraft (UA) is considered unrecoverable so unable to conform with its coordinate operational intent; see
        standard text for more details. 
        This state must transition to Completed.
        The create or update request for this operational intent may omit a Key in this case because the operational intent 
        is being adjusted as flown and cannot necessarily deconflict.

        'Completed': This Operation is no longer in active use.
        The create or update request for this operational intent may omit a Key in this case because the operational intent 
        has ended and does not need to deconflict.
      type: string
      enum:
        - Proposed
        - Accepted
        - Canceled
        - Activated
        - Nonconforming
        - Contingent
        - Completed

    UpdateOperationParameters:
      required:
        - gufi
        - volumes
        - trajectory
        - ovn_array
      type: object
      properties:
        gufi:
          $ref: '#/components/schemas/EntityUUID'
        volumes:
          $ref: '#/components/schemas/VolumeArray'
        trajectory:
          $ref: '#/components/schemas/TrajectoryArray'
        # subscription_id:
        #   description: >-
        #     Used to provide an existing subscription in which to place this operation. Should be provided
        #     only if the operation is being moved to an alternate subscription.
        #   $ref: '#/components/schemas/SubscriptionUUID'
        ovn_array:
          type: array
          description: >-
            DSS Opaque Version Numbers (OVN) of any other operational intents already scheduled at resource.
          items:
            $ref: '#/components/schemas/EntityOVN'
          default: []

    Message:
      description: >-
        A UTM (Unmanned Aircraft System (UAS) Traffic Management) operator message. Used to make other stakeholders aware about an issue.
      type: object
      required:
        - message_type
      properties:
        message_id:
          type: string
          format: uuid
        gufi:
          $ref: '#/components/schemas/EntityUUID'
        origin:
          type: string
          description: >-
            CLIENT: Message is from a UTM Client to the UTM System.
            UTM: Message was automatically generated by the UTM System.
          enum:
            - CLIENT
            - UTM
        time_sent:
          $ref: '#/components/schemas/Time'
        message_type:
          type: string
          description: |-
            - INFORM_OPERATION_PROPOSE_SUCCESS
              This operation is Proposed but has not evaluated latest airspace information or performed DCB check yet.
            - INFORM_OPERATION_PROPOSE_FAIL
              This operation proposed has been rejected.
            - INFORM_OPERATION_BACK_TO_PROPOSED_SUCCESS
              This operation revert to proposed has completed successfully.
            - INFORM_OPERATION_BACK_TO_PROPOSED_FAIL
              This operation revert to proposed has been rejected.
            - INFORM_OPERATION_SUBMIT_SUCCESS
              This operation submit request has completed successfully.  The operation state is changed to Accepted.
            - INFORM_OPERATION_SUBMIT_FAIL
              This operation submit request has failed to complete.  The operation state is not changed.
            - INFORM_OPERATION_ACTIVATE_SUCCESS
              This operation activation request has completed successfully.  The operation state is changed to Activated. 
            - INFORM_OPERATION_ACTIVATE_FAIL
              This operation activation request has failed to complete. The operation state is not changed.
            - INFORM_OPERATION_CLOSE_SUCCESS
              This operation close request has completed successfully.
            - INFORM_OPERATION_CLOSE_FAIL
              This operation close request has failed to complete.  The operation state is not changed.
            - INFORM_OPERATION_CANCEL_SUCCESS
              This operation cancel request has completed successfully.
            - INFORM_OPERATION_CANCEL_FAIL
              This operation cancel request has failed to complete.  The operation state is not changed.
            - INFORM_OPERATION_CONTINGENCY_SUCCESS
              This operation contingency request has completed successfully.  The operation state is changed to the contingent state.
            - INFORM_OPERATION_CONTINGENCY_FAIL
              This operation contingency request has failed to complete.  The operation state is not changed.
            - INFORM_OPERATION_UPDATE_SUCCESS
              This operation update request has completed successfully.
            - INFORM_OPERATION_UPDATE_FAIL
              This operation update request has failed to complete.
            - INFORM_CONSTRAINT_CREATE_SUCCESS
              This constraint create request has completed successfully.
            - INFORM_CONSTRAINT_CREATE_FAIL
              This constraint create request has failed to complete.
            - INFORM_CONSTRAINT_UPDATE_SUCCESS
              This constraint update request has completed successfully.
            - INFORM_CONSTRAINT_UPDATE_FAIL
              This constraint update request has failed to complete.
            - INFORM_CONSTRAINT_DELETE_SUCCESS
              This constraint delete request has completed successfully.
            - INFORM_CONSTRAINT_DELETE_FAIL
              This constraint delete request has failed to complete.
            - INTENT_OPERATION_BACK_TO_PROPOSED
              This operation needs to be reverted to Proposed to re-evaluate latest airspace information or perform DCB check.
            - INTENT_OPERATION_ALL_CLEAR
              This operation was in Accepted state and wants to transition to Activated state.
            - INTENT_OPERATION_CONTINGENCY
              This message requests USS to change the operation to Contingent state.
            - INTENT_OPERATION_CLOSE
              The operator wants to close this operation.  This will move the operation to Completed state.
            - INTENT_OPERATION_CANCEL
              The operator wants to cancel this operation before activation.  This will move the operation to Canceled state.
            - ALERT_OPERATION_NONCONFORMING
              The USS uses this message to alert the operator that the operation position is not conformed to the planned volumes.
            - ALERT_OPERATION_CONFORMING
              The USS uses this message to alert the operator that the operation position is back to be conformed to the planned volumes.
            - ALERT_OPERATION_CONTINGENT
              The USS uses this message to alert the operator that the operation position is in contingent state.
            - ALERT_OPERATION_REPLAN
              The USS requests the operator to replan the operation.  The reason could be either 
              A) that USS received a constraint update from another USS or 
              B) an update of contingent operation from another USS that overlaps with the operation, see reason field for the description.  
              The operator is required to replan the operation to avoid the conflict.
            - ALERT_OPERATION_BALANCE_ADJUSTMENT
              The USS requests the operator to replan operations due to resource capacity imbalance caused by operations.  
              The operator is required to first revert operation state to 'Proposed' before re-planning.
          enum:
            - INFORM_OPERATION_PROPOSE_SUCCESS
            - INFORM_OPERATION_PROPOSE_FAIL
            - INFORM_OPERATION_BACK_TO_PROPOSED_SUCCESS
            - INFORM_OPERATION_BACK_TO_PROPOSED_FAIL
            - INFORM_OPERATION_SUBMIT_SUCCESS
            - INFORM_OPERATION_SUBMIT_FAIL
            - INFORM_OPERATION_ACTIVATE_SUCCESS
            - INFORM_OPERATION_ACTIVATE_FAIL
            - INFORM_OPERATION_CLOSE_SUCCESS
            - INFORM_OPERATION_CLOSE_FAIL
            - INFORM_OPERATION_CANCEL_SUCCESS
            - INFORM_OPERATION_CANCEL_FAIL
            - INFORM_OPERATION_CONTINGENCY_SUCCESS
            - INFORM_OPERATION_CONTINGENCY_FAIL
            - INFORM_OPERATION_UPDATE_SUCCESS
            - INFORM_OPERATION_UPDATE_FAIL
            - INFORM_CONSTRAINT_CREATE_SUCCESS
            - INFORM_CONSTRAINT_CREATE_FAIL
            - INFORM_CONSTRAINT_UPDATE_SUCCESS
            - INFORM_CONSTRAINT_UPDATE_FAIL
            - INFORM_CONSTRAINT_DELETE_SUCCESS
            - INFORM_CONSTRAINT_DELETE_FAIL
            - INTENT_OPERATION_BACK_TO_PROPOSED
            - INTENT_OPERATION_ALL_CLEAR
            - INTENT_OPERATION_CONTINGENCY
            - INTENT_OPERATION_CLOSE
            - INTENT_OPERATION_CANCEL
            - ALERT_OPERATION_NONCONFORMING
            - ALERT_OPERATION_CONFORMING
            - ALERT_OPERATION_CONTINGENT
            - ALERT_OPERATION_REPLAN
            - ALERT_OPERATION_BALANCE_ADJUSTMENT
        beacon_code:
          type: integer
          description: >- 
            Beacon code is a discrete transponder code (often called a squawk code) assigned by Air Traffic Controllers to identify an aircraft uniquely in a flight information region (FIR). This allows easy identification of aircraft on radar. Codes are made of four octal digits; the dials on a transponder read from zero to seven, inclusive.
        status_code:
          type: integer
          description: >- 
            Response status codes that indicate whether a specific interface query or request has been successfully completed.
            Mainly used to send HTTP response codes - see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
        reason:
          type: string
        violations:
          type: array
          description: >-
            Included with messages of INFORM_OPERATION_REJECTED or INFORM_OPERATION_UPDATE_FAIL.
            The violation type refers to the constraint type of violation, e.g. OPERATION
            or CONSTRAINT.  The constraining_id is the UUID associated with each constraint;
            When applicable, violating_volumes indicates the ordinals of volumes that are in
            violation. This allows for querying UTM for more information details.
          items:
            $ref: '#/components/schemas/Violation'
        free_text:
          type: string
          description: >-
            Any additional information. Note that this is for human consumption.
            All time critical elements should be captured in the other data
            fields for easier consumption by other automated systems.
          maxLength: 1000
        request_id:
          type: string
          description: only set to match the request_id in the initial operator request
        updated_trajectory:
          type: object
          description: >-
            Operational Intent provided by the PSU to the operator in the event the plan
            is changed by SCMS.
            This is required for message_type of 'INFORM_OPERATION_SUBMIT_SUCCESS'
          $ref: '#/components/schemas/TrajectoryArray'
        missing_operational_intents:
          type: string
          description: |-
            Note: Stringified 'missing_operational_intents' returned by DSS for a AirspaceConflictResponse with response code 409.
            - For more details see https://raw.githubusercontent.com/nasa/uam-apis/master/openapi/psu/dss_api.yml#/components/schemas/AirspaceConflictResponse
              - List of operational intent references for which current proof of knowledge was not provided. If this field is present and contains elements, the operator should query, using uss_base_url, for details of these operational intents and correct OVNs.  The OVNs can be used to update the key for re-submission to DSS.
          example: "[]"
        resources_imbalanced:
          type: object
          description: |-
            List of operations within resources that have been alerted to cause resources to be imbalanced due to capacity availability changes.
          $ref: '#/components/schemas/ResourcesImbalanced'

      example:
        message_id: 00000000-0000-4444-8888-CAFEBEEFF00D
        time_sent: "2015-08-20T14:11:57.345Z"
        message_type: INFORM_OPERATION_CLOSED
        gufi: 00000000-0000-4444-8888-FEEDDEADBEEF
        free_text: "Cool flight, bro"

    Violation:
      type: object
      required:
        - type
      properties:
        constraining_id:
          type: string
          description: Unique identifier for this constraint.
        errorMessage:
          type: string
          description: >-
            A report that a problem occurred thus Violation could not be
            resolved.
        type:
          type: string
          description: >-
            The violation type, e.g. OPERATION (constraint is an existing
            flight)
        violating_volumes:
          type: array
          description: >-
            The ordinal of the volumes that are violating this constraint, eg, the
            proposed flight's second volume violated this constraint
          items:
            type: integer
            format: int32

    Position:
      description: >-
        Forked from PSU API /components/schemas/VehicleTelemetry
        Modifications Include:
        - Add enroute_positions_id
      required:
        - enroute_positions_id
        - gufi
        - position_details
        - velocity
        - time_measured
      type: object
      properties:
        enroute_positions_id:
          type: string
          format: uuid
        gufi:
          $ref: '#/components/schemas/EntityUUID'
        position_details:
          $ref: '#/components/schemas/PositionDetails'
        velocity:
          $ref: '#/components/schemas/Velocity'
        time_measured:
          $ref: '#/components/schemas/Time'

    PositionDetails:
      description: |-
        Location of the vehicle (UAS) as reported for UTM.
        Note: 'accuracy' values are required when extrapolated field is true
        and always in the entry for the current state.
      type: object
      properties:
        longitude:
          $ref: '#/components/schemas/Longitude'
        latitude:
          $ref: '#/components/schemas/Latitude'
        accuracy_h:
          $ref: '#/components/schemas/PositionAccuracyHorizontal'
        accuracy_v:
          $ref: '#/components/schemas/PositionAccuracyVertical'
        extrapolated:
          description: |-
            True if this position was generated primarily by computation
            rather than primarily from a direct instrument measurement.
            Assumed false if not specified.
          type: boolean
          default: false
        altitude:
          $ref: '#/components/schemas/Altitude'

    PositionAccuracyVertical:
      description: |-
        Vertical error that is likely to be present in this reported position.
        This is the GVA enumeration from ADS-B, plus some finer values for UAS.
      type: string
      enum:
        - VAUnknown
        - VA150mPlus
        - VA150m
        - VA45m
        - VA25m
        - VA10m
        - VA3m
        - VA1m

    PositionAccuracyHorizontal:
      description: |-
        Horizontal error that is likely to be present in this reported position.
        This is the NACp enumeration from ADS-B, plus 1m for a more complete range for UAS.
      type: string
      enum:
        - HAUnknown
        - HA10NMPlus
        - HA10NM
        - HA4NM
        - HA2NM
        - HA1NM
        - HA05NM
        - HA03NM
        - HA01NM
        - HA005NM
        - HA30m
        - HA10m
        - HA3m
        - HA1m

    Volume3D:
      description: |-
        A three-dimensional geographic volume consisting of a vertically-extruded shape.  
      required:
        - altitude_lower
        - altitude_upper
      type: object
      properties:
        outline_polygon:
          $ref: '#/components/schemas/Polygon'
          description: A polygonal geographic shape on the surface of the earth.
        altitude_lower:
          description: Minimum bounding altitude of this volume. Must be less than
            altitude_upper, if specified.
          $ref: '#/components/schemas/Altitude'
        altitude_upper:
          description: Maximum bounding altitude of this volume. Must be greater than
            altitude_lower, if specified.
          $ref: '#/components/schemas/Altitude'

    Polygon:
      description: |-
        An enclosed area on the earth.
        The bounding edges of this polygon shall be the shortest paths between connected vertices.  This means, for instance, that the edge between two points both defined at a particular latitude is not generally contained at that latitude.
        The winding order shall be interpreted as the order which produces the smaller area.
        The path between two vertices shall be the shortest possible path between those vertices.
        Edges may not cross.
        Vertices may not be duplicated.  In particular, the final polygon vertex shall not be identical to the first vertex.
      required:
        - vertices
      type: object
      properties:
        vertices:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/LatLngPoint'

    Volume4D:
      description: >-
        Contiguous block of geographic spacetime.
        Forked from PSU API /components/schemas/Volume4D.
        Modifications Include:
        - Make time_start and time_end required
      required:
        - volume
        - time_start
        - time_end
      type: object
      properties:
        volume:
          $ref: '#/components/schemas/Volume3D'
        time_start:
          $ref: '#/components/schemas/Time'
        time_end:
          $ref: '#/components/schemas/Time'

    OperatorResponse:
      type: object
      properties:
        status_code:
          description: the status code of the response
          type: integer
          format: int32
        msg:
          type: string
        entity_id:
          type: string
          format: uuid
        request_id:
          type: string

    # For UAM, discussion about preferred change was from a 
    # single speed to array of speeds with different speed_types.
    # But for backwards compatibility, decision was made to add 
    # optional fields indicated_air_speed, calibrated_air_speed & 
    # true_air_speed with existing speed field for ground speed.
    TrajectoryPoint4D:
      description: |
        A point for use within a planned trajectory.
        Tolerance around the point is standardized, and will be applicable to all operations in a given area.
        - Based on https://raw.githubusercontent.com/nasa/uam-apis/blob/master/openapi/psu/psu_api.yml#/components/schemas/TrajectoryPoint4D
        Currently Flight Rule is not expected to change during an operation. If it does, the following may be added as a new property:
          https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_RouteTrajectoryElementType.html#Link2A3
        - For UAM, the different speed types are:
          - Indicated Air Speed (IAS) is from direct aircraft instrument reading obtained from the Airspeed Indicator (ASI), uncorrected for variations in atmospheric density, installation error, or instrument error. It is calculated directly off an aircraft's pitot-static system and depends on the aircraft's dynamic pressure - the difference between its total pressure and static pressure.
          - Calibrated Air Speed (CAS) is Indicated Airspeed (IAS) corrected for installation and instrument errors. At cruising and higher airspeed ranges, IAS and CAS are approximately the same. Calibrated airspeed for an aircraft can be found in the calibration chart of the aircraft manual.
            - For UAM, IAS will be assumed to be equivalent to CAS.
          - True Air Speed (TAS) which is CAS corrected for altitude and non-standard temperature. Because air density decreases with an increase in altitude, an aircraft has to be flown faster at higher altitudes to maintain a given CAS and vice versa.
          - Ground Speed (GS) is the actual speed of an aircraft over the ground. It is the TAS adjusted for wind. While not an air speed, ground speed is important for navigation and has a major impact on the time it takes to get to a destination. Ground speed decreases with a headwind and increases with a tailwind.
      required:
        - lat_lng_point
        - altitude
        - time
        - speed
        - trajectory_property_array
      type: object
      properties:
        point_designator:
          description: The name of the designated point.
            This is required for all named airspace structure point from ASDS, including vertipads.
          type: string
          example: ee123
        lat_lng_point:
          description: Latitude and Longitude of the point. If this is for a named airspace structure 
            point from ASDS, it should be the same value as from ASDS.
          $ref: '#/components/schemas/LatLngPoint'
        altitude:
          description: Altitude of the point. If this is for a named airspace structure 
            point from ASDS, it should be the same value as from ASDS.
          $ref: '#/components/schemas/Altitude'  
        time:
          description: |-
            Estimated time when the vehicle will be at the location of the TrajectoryPoint
          $ref: '#/components/schemas/Time'
        indicated_air_speed: 
          description: |-
            Indicated Air Speed (IAS) is from direct aircraft instrument reading obtained from the Airspeed Indicator (ASI), uncorrected for variations in atmospheric density, installation error, or instrument error. It is calculated directly off an aircraft's pitot-static system and depends on the aircraft's dynamic pressure - the difference between its total pressure and static pressure.
          $ref: '#/components/schemas/Velocity'
        calibrated_air_speed:
          description: |-
            Calibrated Air Speed (CAS) is Indicated Airspeed (IAS) corrected for installation error and instrument error. At cruising and higher airspeed ranges, IAS and CAS are approximately the same. Calibrated airspeed for an aircraft can be found in the calibration chart of the aircraft manual.
              - For UAM X5, IAS will be assumed to be equivalent to CAS.
          $ref: '#/components/schemas/Velocity'
        true_air_speed: 
          description: |-
            True Air Speed (TAS) which is Calibrated Air Speed (CAS) corrected for altitude and non-standard temperature. Because air density decreases with an increase in altitude, an aircraft has to be flown faster at higher altitudes to maintain a given CAS and vice versa.
            - For UAM X5, IAS will be assumed to be equivalent to CAS.
          $ref: '#/components/schemas/Velocity'
        speed:
          description: |-
            Speed of the vehicle at this TrajectoryPoint.
            FIXM allows for two speed entries:  predictedAirspeed and predictedGroundspeed but for UAM, this will be ground speed. 
          $ref: '#/components/schemas/Velocity'
          externalDocs:
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link1C5 
        trajectory_property_array:
          description: |-
            Describes any applicable properties of the trajectory point.
            May include multiple properties per point. FIXM allows up to 2000 properties per
            trajectory point. For X5 we are allowing up to 4.
            The first point of initial plan must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_OFF
            The last point must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_ON
            A named airspace structure point from ASDS must include at a minimum: WAYPOINT
            If the airspace structure point has a SchedulingType, it must be included as follows:
              SchedulingType enum   |   Property enum
              Entry                 |   ENTRY_CORRIDOR
              Exit                  |   EXIT_CORRIDOR
              Crossing              |   CROSSING_TRACK
              Merge                 |   MERGE_TRACK
          type: array
          minItems: 1
          maxItems: 4
          items:
            $ref: '#/components/schemas/TrajectoryProperty'
          externalDocs:
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link2AC                   
      externalDocs:
        description: See FIXM 4.2.0 for further information.
        url: https://www.fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link116     

    TrajectoryProperty:
      description: Describes any applicable properties of the trajectory point.
      type: object
      required:
        - property_type
      properties:
        property_type:
          description: |
            Provides the type of trajectory point property. Enum list is based on the FIXM definition
            of TrajectoryPointPropertyType.
          type: string
          enum:
            - TOP_OF_CLIMB
            - TOP_OF_DESCENT
            - TCP_VERTICAL
            - TCP_SPEED
            - TCP_LATERAL
            - WHEELS_OFF
            - WHEELS_ON
            - AIRPORT_REFERENCE_LOCATION
            - WAYPOINT
            - ENTRY_CORRIDOR
            - EXIT_CORRIDOR
            - CROSSING_TRACK
            - MERGE_TRACK
          externalDocs:
            description: FIXM definition of TrajectoryPointPropertyType
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPointPropertyType.html#Link2B0

    Velocity:
      description: |-
        Velocity of the associated vehicle at the time_measured.
        - Based on PSU API https://raw.githubusercontent.com/nasa/uam-apis/blob/master/openapi/psu/psu_api.yml#/components/schemas/Velocity
      required:
        - speed
        - units_speed
        - speed_type
      type: object
      properties:
        speed:
          format: float
          type: number
          description: |-
            Speed numerical value.
          minimum: 0.0
          example: 200.1
        units_speed:
          type: string
          enum:
            - MetersPerSecond
            - Knots
          default:
            Knots
        track:
          format: float
          type: number
          description: |-
            Direction of flight expressed as a "True North-based" ground track angle.
            This value is provided in degrees East of North with a minimum resolution of 1 degree.
            A value of 360 indicates invalid, no value, or unknown.
          example: 120
          default: 0
        speed_type:
          description: |-
            For UAM, the different types for speed are:
              - GROUND is Ground Speed (GS) which is the actual speed of an aircraft over the ground.
              - INDICATED_AIR is Indicated Air Speed (IAS) direct from aircraft instrument reading.
              - CALIBRATED_AIR is Calibrated Air Speed (CAS) where Indicated Airspeed (IAS) is corrected for installation and instrument errors.
              - TRUE_AIR is True Air Speed (TAS) which is CAS corrected for altitude and non-standard temperature.
          type: string
          enum:
            - GROUND
            - INDICATED_AIR
            - CALIBRATED_AIR
            - TRUE_AIR
          default: GROUND
      externalDocs:
        description: FIXM definition of predictedGroundspeed in TrajectoryPointPropertyType
        url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link1C5

    Altitude:
      type: object
      required:
        - value
        - reference
        - units
      properties:
        value:
          description: |-
            The numeric value of the altitude. Note that min and max values are
            added as a sanity check. As use cases evolve and more options are
            made available in terms of units of measure or reference systems,
            these bounds should be re-evaluated.
          type: number
          format: double
          minimum: -8000
          exclusiveMinimum: false
          maximum: 100000
          exclusiveMaximum: false
        reference:
          description: |-
            A code indicating the reference for a vertical distance. See AIXM 5.1
            and FIXM 4.2.0. Currently, UTM only allows WGS84 with no immediate
            plans to allow other options. FIXM and AIXM allow for 'SFC' (Surface Elevation) which is
            equivalent to AGL (Above Ground Level).
          type: string
          enum:
            - W84
        units:
          description: |-
            The reference quantities used to express the value of altitude. See
            FIXM 4.2. Currently, UTM only allows meters with no immediate plans
            to allow other options.
          type: string
          enum:
            - M
  
    Latitude:
      description: Degrees of latitude north of the equator, with reference to the WGS84 ellipsoid.
      maximum: 90
      exclusiveMaximum: false
      minimum: -90
      exclusiveMinimum: false
      type: number
      format: double
      example: 34.123
 
    Longitude:
      description: Degrees of longitude east of the Prime Meridian, with reference to the WGS84 ellipsoid.
      minimum: -180
      exclusiveMaximum: false
      maximum: 180
      exclusiveMinimum: false
      type: number
      format: double
      example: -118.456
 
    LatLngPoint:
      description: Point on the earth's surface.
      required:
        - lat
        - lng
      type: object
      properties:
        lng:
          $ref: '#/components/schemas/Longitude'
        lat:
          $ref: '#/components/schemas/Latitude'

    Time:
      required:
        - value
        - format
      type: object
      properties:
        value:
          type: string
          description: RFC3339-formatted time/date string.  The time zone must be 'Z'.
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        format:
          type: string
          enum:
            - RFC3339

    UUIDv4:
      description: |-
        Universally-unique identifier (version 4).
      maxLength: 36
      minLength: 36
      type: string
      format: uuid
      pattern: >-
        '^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-4[0-9a-fA-F]{3}\\-[8-b][0-9a-fA-F]{3}\\-[0-9a-fA-F]{12}$'
      example: d290f1ee-6c54-4b01-90e6-d701748f0851
    
    # SubscriptionUUID:
    #   description: |-
    #     Universally-unique identifier for a Subscription communicated through
    #     the DSS.  Formatted as UUIDv4.
    #   $ref: '#/components/schemas/UUIDv4'
    #   example: '78ea3fe8-71c2-4f5c-9b44-9c02f5563c6f'

    EntityUUID:
      description: |-
        Universally-unique identifier for an Entity communicated through
        the DSS.  Formatted as UUIDv4.
      $ref: '#/components/schemas/UUIDv4'
      example: '2f8343be-6482-4d1b-a474-16847e01af1e'

    AircraftRegistration:
      description: |
        A unique, alphanumeric string that identifies a civil aircraft and consists of the Aircraft
        Nationality or Common Mark and an additional alphanumeric string, the registration mark,
        assigned by the state of registry or common mark registering authority. [FIXM]
      type: string
      pattern: "[A-Z0-9]{1,7}"
      minLength: 1
      maxLength: 7
      x-uam-data-accessibility: PUBLIC
      externalDocs:
        description: See FIXM 4.2.0 for further information.
        url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_AircraftRegistrationType.html#LinkBC

    OperatorName:
      description: The identifier of the UAM Operator. Required if different than the PSU.
      type: string
      pattern: "[A-Z]{3}"
      example: "AAL" 
      externalDocs:
        description: See FIXM 4.2.0 for further information.
        url: https://www.fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_AircraftOperatorType.html#Link1E3

    TrajectoryArray:
      type: array
      minItems: 2
      maxItems: 1000
      description: |-
        The list of TrajectoryPoints for this operation.  This list must contain
        all significant TrajectoryPoints. A new TrajectoryPoint should be provided
        for each change in speed, cruise altitude, and/or heading. Speed is assumed
        to be held constant between TrajectoryPoints. For additional insight on points
        to be included, see the enumeration of property types in the TrajectoryPoint4D model.
      items:
        $ref: '#/components/schemas/TrajectoryPoint4D'

    VolumeArray:
      maxItems: 250
      minItems: 1
      type: array
      description: >-
        The actual geographical and time information for the operation.
        For each operation volume, the properties of time_start and time_end are required.
      items:
        $ref: '#/components/schemas/Volume4D'